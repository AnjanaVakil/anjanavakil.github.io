<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anjana</title>
    <link>https://anjanavakil.github.io/</link>
    <description>Recent content on Anjana</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Mar 2022 14:15:48 +0800</lastBuildDate>
    
        <atom:link href="https://anjanavakil.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code: The Hidden Language of Computer Hardware and Software</title>
      <link>https://anjanavakil.github.io/post/code/</link>
      <pubDate>Fri, 25 Feb 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/code/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/1494026/&#34;&gt;&lt;em&gt;Code: The Hidden Language of Computer Hardware and Software&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一遍读的是中文版，寒假期间重读了英文版。这应该是第一本读完的英文专业书籍。读的过程中还是稍微有些困难的，其实专业书籍的英文不会很难，但和本就陌生的专业知识结合起来，读书的速度就明显很慢了。不过，总是要迈出第一步的。&lt;/p&gt;
&lt;p&gt;书籍网站首页链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.charlespetzold.com/code/&#34;&gt;https://www.charlespetzold.com/code/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;书中并未给出参考文献，网站详细列出了Annotated Bibliography：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.charlespetzold.com/code/CodeBibliography.html&#34;&gt;https://www.charlespetzold.com/code/CodeBibliography.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网站的&lt;code&gt;Annotated Bibliography&lt;/code&gt;, &lt;code&gt;Technical Addendum&lt;/code&gt;, &lt;code&gt;Errata - Hardcover Edition&lt;/code&gt;, &lt;code&gt;Ambiguities and Clarifications&lt;/code&gt;四部分还是很有价值的。&lt;/p&gt;
&lt;p&gt;作者&lt;code&gt;Charles Petzold&lt;/code&gt;的网站：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.charlespetzold.com/home.html&#34;&gt;https://www.charlespetzold.com/home.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;之前看到一篇blog中关于英语学习的建议，提到”一定要用&lt;code&gt;英英字典&lt;/code&gt;，不要用英汉字典”，因为“就算用最好的英汉字典，也会严重延缓甚至误导对英文单词的理解”。这点有些时候倒是感同身受，看中文释义理解不了的单词，看英文释义或例句就可以轻松理解。不过专业方向有很多的专业术语，尽管中文翻译的有点奇怪，不过只能习惯适应。&lt;/p&gt;
&lt;p&gt;因此，列出我读此书过程中的陌生词汇（自己的词汇量还是很小的😭😬）：&lt;/p&gt;
&lt;p&gt;punctuation marks 标点符号&lt;/p&gt;
&lt;p&gt;automatic teller 自动取款机&lt;/p&gt;
&lt;p&gt;comma 逗号 semicolon 分号 colon 冒号 period 句号 parenthese 括号 ellipsis 省略号&lt;/p&gt;
&lt;p&gt;ellipse n. [数] 椭圆形，[数] 椭圆&lt;/p&gt;
&lt;p&gt;accent indicator 音调符号&lt;/p&gt;
&lt;p&gt;capital letters 大写字母 capitalize v. 用大写字母书写（或印刷）&lt;/p&gt;
&lt;p&gt;neutron 中子 proton 质子 electron 电子 atom 原子 molecules 分子&lt;/p&gt;
&lt;p&gt;table salt食盐&lt;/p&gt;
&lt;p&gt;charge 电荷 current n.电流 conductor 导体 insulator 绝缘体&lt;/p&gt;
&lt;p&gt;in the chapters ahead 在后面的章节中&lt;/p&gt;
&lt;p&gt;relay 继电器&lt;/p&gt;
&lt;p&gt;ratify 批准 ratified ratification&lt;/p&gt;
&lt;p&gt;hockey n. &amp;lt;英&amp;gt;曲棍球；&amp;lt;美&amp;gt;冰球&lt;/p&gt;
&lt;p&gt;flour n.面粉，粉&lt;/p&gt;
&lt;p&gt;dispense v.发放，分配；&lt;/p&gt;
&lt;p&gt;dispense with sb/sth: to stop using sb/sth because you no longer need them or it 摒弃；不再需要；不再用&lt;/p&gt;
&lt;p&gt;I think we can dispense with the formalities (= speak openly and naturally to each other). 我想我们就免去客套吧。&lt;/p&gt;
&lt;p&gt;Latin  n. 拉丁语；拉丁人；拉丁音乐 adj. 拉丁语的，&lt;/p&gt;
&lt;p&gt;millennium millennia 一千年 million 百万  billion 十亿&lt;/p&gt;
&lt;p&gt;decipher v. 破译，辨认（难认、难解的东西）；理解（神秘或难懂的事物）&lt;/p&gt;
&lt;p&gt;bookkeeping n.记账&lt;/p&gt;
&lt;p&gt;geometry n.几何学，几何&lt;/p&gt;
&lt;p&gt;algebra n.代数&lt;/p&gt;
&lt;p&gt;Arabic adj. 阿拉伯的；阿拉伯人的 n. 阿拉伯语&lt;/p&gt;
&lt;p&gt;Arab n. 阿拉伯人；阿拉伯马 adj. 阿拉伯的；阿拉伯人的，与阿拉伯人有关的&lt;/p&gt;
&lt;p&gt;A.D.   abbr. （拉）公元（Anno Domini）&lt;/p&gt;
&lt;p&gt;symphony n.交响乐 pl. symphonies&lt;/p&gt;
&lt;p&gt;fortnight n.two weeks 两星期&lt;/p&gt;
&lt;p&gt;round number 用整十、整百等来表示的约整数 whole number 整数&lt;/p&gt;
&lt;p&gt;quaternary adj. [数] 四进制的；四个一组的 n. 四；四个一组&lt;/p&gt;
&lt;p&gt;octal adj.八进制的 octet n. 八重奏，八重唱；&lt;/p&gt;
&lt;p&gt;dividend 被除数 divisor 除数 remainder 余数&lt;/p&gt;
&lt;p&gt;methodical adj. 有条理的，做事有条不紊的&lt;/p&gt;
&lt;p&gt;ribbon n. 丝带，绸带    dolphin n.海豚  tan cat 褐色的猫&lt;/p&gt;
&lt;p&gt;logarithm 对数&lt;/p&gt;
&lt;p&gt;parity （计算机）奇偶校验  even parity, odd parity&lt;/p&gt;
&lt;p&gt;commutative 交换律 associative 结合律 distributive 分配律&lt;/p&gt;
&lt;p&gt;the Law of Contradiction 矛盾律&lt;/p&gt;
&lt;p&gt;forgo 放弃=desert=yield=quit&lt;/p&gt;
&lt;p&gt;telegraph sounder 电报发声器&lt;/p&gt;
&lt;p&gt;precursor   n. （事物）先驱，先兆；&lt;/p&gt;
&lt;p&gt;Difference Engine 差分机&lt;/p&gt;
&lt;p&gt;murky adj. （液体）浑浊的；（尤指因浓雾而）昏暗的，阴暗的；&lt;/p&gt;
&lt;p&gt;albeit conj. 虽然，尽管&lt;/p&gt;
&lt;p&gt;electromagnet n. 电磁体&lt;/p&gt;
&lt;p&gt;clunky adj. 沉重的，笨重过时的；&lt;/p&gt;
&lt;p&gt;amenity  n. 方便条件，便利设施；舒适，惬意； pl.amenities&lt;/p&gt;
&lt;p&gt;immensely adv. 极其，非常&lt;/p&gt;
&lt;p&gt;Half Adder 半加器&lt;/p&gt;
&lt;p&gt;perverse  adj. 任性的，故意作对的；有悖常理的，反常的，不合人意的；&lt;/p&gt;
&lt;p&gt;perverse logic 反逻辑&lt;/p&gt;
&lt;p&gt;minuend 被减数 subtrahend 减数  difference 差&lt;/p&gt;
&lt;p&gt;The subtrahend is subtracted from the minuend, and the result is the difference.  从被减数中减去减数，得到的结果叫做差。&lt;/p&gt;
&lt;p&gt;negation 相反数 inverse 反码 ones’ complement 对1求补数&lt;/p&gt;
&lt;p&gt;circuitry n. 电路&lt;/p&gt;
&lt;p&gt;flip-flop n. [电子] 触发器；  ripple counter 行波计数器&lt;/p&gt;
&lt;p&gt;the stereo system 音响设备&lt;/p&gt;
&lt;p&gt;gong n. 锣；v. 鸣锣；&lt;/p&gt;
&lt;p&gt;oscillator 振荡器&lt;/p&gt;
&lt;p&gt;contorted adj. 弯曲的，扭曲的 v. 扭曲；歪曲（contort 的过去分词）&lt;/p&gt;
&lt;p&gt;idiosyncrasy n. （个人独有的）气质，性格，习惯&lt;/p&gt;
&lt;p&gt;surmise  v. 猜测；推测=guess  n. 推测；猜度&lt;/p&gt;
&lt;p&gt;seesaw n. 跷跷板&lt;/p&gt;
&lt;p&gt;Hold That Bit 保持位&lt;/p&gt;
&lt;p&gt;level-triggered 电平触发 edge-triggered 边沿触发&lt;/p&gt;
&lt;p&gt;latch 锁存器 frequency divider 分频器&lt;/p&gt;
&lt;p&gt;opportune adj. 适当的；恰好的；合时宜的&lt;/p&gt;
&lt;p&gt;clockwise adj. 顺时针方向的adv. 顺时针方向地  anticlockwise adj. 逆时针的 adv. 逆时针地&lt;/p&gt;
&lt;p&gt;mimic v. 模仿；模拟 =imitate=resemble=emulate=simulate&lt;/p&gt;
&lt;p&gt;present participle:mimicing&lt;/p&gt;
&lt;p&gt;past tense/past participle:mimiced&lt;/p&gt;
&lt;p&gt;participle n. （语法）分词  past/present participle&lt;/p&gt;
&lt;p&gt;aforementioned adj. 上述的；前面提及的&lt;/p&gt;
&lt;p&gt;nibble nybble 半字节&lt;/p&gt;
&lt;p&gt;succinct adj. 言简意赅的，简练的&lt;/p&gt;
&lt;p&gt;snap &amp;lt;美，非正式&amp;gt;容易的事&lt;/p&gt;
&lt;p&gt;Converting between octal and binary is a snap.&lt;/p&gt;
&lt;p&gt;donut n. 炸面包圈，甜甜圈（同 doughnut）&lt;/p&gt;
&lt;p&gt;terse adj. 简洁的，精练的，扼要的&lt;/p&gt;
&lt;p&gt;recap v. 扼要重述n. 扼要的重述，概述&lt;/p&gt;
&lt;p&gt;3-to-8 decoder 3-8译码器&lt;/p&gt;
&lt;p&gt;kiolgram 千克 gram 克&lt;/p&gt;
&lt;p&gt;mega adj. &amp;lt;非正式&amp;gt;极大的，巨大的；&amp;lt;非正式&amp;gt;优秀的，杰出的adv. &amp;lt;非正式&amp;gt;极其&lt;/p&gt;
&lt;p&gt;aversion n. 厌恶，憎恶；&lt;/p&gt;
&lt;p&gt;ingenuity  n. 心灵手巧，聪明才智，独创力&lt;/p&gt;
&lt;p&gt;hammock  n. 吊床；吊铺；吊带vt. 睡吊床&lt;/p&gt;
&lt;p&gt;newfangle adj. 新奇的；最新流行的；最新式的（= newfangled）n. 新式的东西v. 使流行&lt;/p&gt;
&lt;p&gt;contraption n. 奇妙的装置；精巧的设计&lt;/p&gt;
&lt;p&gt;earth-shattering adj. 惊天动地的；极其重大的=earth-shaking&lt;/p&gt;
&lt;p&gt;versatile adj. 多才多艺的，有多种技能的；多用途的，多功能的&lt;/p&gt;
&lt;p&gt;excruciating adj. 折磨人的；使苦恼的=painful =awful   v. 折磨；使苦恼；使受酷刑（excruciate 的 ing 形式）&lt;/p&gt;
&lt;p&gt;at times 有时；偶尔=from time to time&lt;/p&gt;
&lt;p&gt;dog v. 困扰，纠缠；跟踪，尾随&lt;/p&gt;
&lt;p&gt;dogged adj. 顽强的，坚持不懈的v. 困扰，纠缠；跟踪，尾随（dog 的过去式和过去分词）&lt;/p&gt;
&lt;p&gt;doggedly adv. 顽强地；固执地&lt;/p&gt;
&lt;p&gt;meager adj. 贫乏的；瘦的；（数量）少的，不足的&lt;/p&gt;
&lt;p&gt;insanely adv. 疯狂地；狂暴地；精神错乱地&lt;/p&gt;
&lt;p&gt;analog computer 模拟信号计算机&lt;/p&gt;
&lt;p&gt;derogatory adj. 贬低的，贬义的 derogatory term 贬义词&lt;/p&gt;
&lt;p&gt;akin  adj. 相似的，类似的；&lt;/p&gt;
&lt;p&gt;mnemonic adj. 记忆的；助记的；记忆术的 short mnemonics 简短助记符&lt;/p&gt;
&lt;p&gt;paper tape [计] 纸带&lt;/p&gt;
&lt;p&gt;abaci n. 算盘（abacus 的复数）&lt;/p&gt;
&lt;p&gt;innate adj. 先天的，固有的；&lt;/p&gt;
&lt;p&gt;nautical adj. 航海的，海上的；船员的&lt;/p&gt;
&lt;p&gt;set of operations 操作集&lt;/p&gt;
&lt;p&gt;resurrect vt. 使复活；复兴；挖出vi. 复活 = restore= revive&lt;/p&gt;
&lt;p&gt;precocious adj. 早熟的；过早发育的&lt;/p&gt;
&lt;p&gt;tally n. 记录=record，得分；账单；v. 相符，吻合；计算=calculate，合计； tallied&lt;/p&gt;
&lt;p&gt;e.g. These positions represented certain characteristics of a person being tallied in the census.&lt;/p&gt;
&lt;p&gt;chronologically adv. 按年代地&lt;/p&gt;
&lt;p&gt;supplant v. 取代，代替&lt;/p&gt;
&lt;p&gt;thwart v. 反对，阻挠，挫败；横过&lt;/p&gt;
&lt;p&gt;flamboyant adj. 艳丽的；火焰似的；炫耀的&lt;/p&gt;
&lt;p&gt;magnet n. 磁体，磁铁 magnetize vt. 吸引；使磁化vi. 磁化；受磁&lt;/p&gt;
&lt;p&gt;maze n. 迷宫v. 使发昏，使迷惑&lt;/p&gt;
&lt;p&gt;cybernetics n. 控制论&lt;/p&gt;
&lt;p&gt;biological adj. 生物的&lt;/p&gt;
&lt;p&gt;ubiquitous adj. 普遍存在的，无所不在的&lt;/p&gt;
&lt;p&gt;perennial  adj.长久的；持续的；反复出现的&lt;/p&gt;
&lt;p&gt;coin v. 创造新词，首次使用；n.硬币&lt;/p&gt;
&lt;p&gt;The transistor didn’t come out of the blue. 晶体管并不是凭空出现的。&lt;/p&gt;
&lt;p&gt;dislodge v. 逐出，驱逐；离开原位&lt;/p&gt;
&lt;p&gt;inaugurate v. 为……举行就职典礼；开创，开展&lt;/p&gt;
&lt;p&gt;royalty n.版税   pl. royalties&lt;/p&gt;
&lt;p&gt;protrude v. 伸出，突出； protruding adj. 突出的；伸出的&lt;/p&gt;
&lt;p&gt;indentation n. 压痕，[物] 刻痕；凹陷&lt;/p&gt;
&lt;p&gt;propagation time 传播时间&lt;/p&gt;
&lt;p&gt;nanosecond(nsec/ns)纳秒&lt;/p&gt;
&lt;p&gt;elusive  adj. 难以理解的，难以记住的；&lt;/p&gt;
&lt;p&gt;moronic adj. 低能的；迟钝的  moronically adv.   moronity n. 低能；鲁钝&lt;/p&gt;
&lt;p&gt;hefty adj. 高大健壮的，笨重的；（数目，数量）相当大的；有力的，用力的&lt;/p&gt;
&lt;p&gt;hefty-&amp;gt;heftier-&amp;gt;heftiest   heftiness n.庞大；沉重&lt;/p&gt;
&lt;p&gt;perforate v. 穿孔  perforated adj. 穿孔的；&lt;/p&gt;
&lt;p&gt;snippet n. 小片；片断； a snippet of information 一点消息&lt;/p&gt;
&lt;p&gt;bitwise adj. （计算机）逐位，按位 bitwise operation 按位运算&lt;/p&gt;
&lt;p&gt;miscellaneous  adj. （人，物）混杂的，各种各样的；&lt;/p&gt;
&lt;p&gt;cassette n. 磁带盒，盒式磁带  cassette tape&lt;/p&gt;
&lt;p&gt;subroutine n. [计] 子程序&lt;/p&gt;
&lt;p&gt;product n.积，乘积；&lt;/p&gt;
&lt;p&gt;Carriage Return 回车  Line Feed换行 figure shift数字转义&lt;/p&gt;
&lt;p&gt;leeway: the amount of freedom that you have to change sth or to do sth in the way you want to 自由活动的空间&lt;/p&gt;
&lt;p&gt;e.g.How much leeway should parents give their children?&lt;/p&gt;
&lt;p&gt;haphazard  adj. 无计划的，没有条理的=unorganized=random  adv. 杂乱无章地，无计划地 n. 偶然&lt;/p&gt;
&lt;p&gt;rudiment n. 雏形；基本原理&lt;/p&gt;
&lt;p&gt;rudimentary adj. 基本的，初步的；不成熟的，未充分发展的&lt;/p&gt;
&lt;p&gt;tabulate  制表  tabulation n. 表格；作表&lt;/p&gt;
&lt;p&gt;madden v. 狂怒，极为恼火&lt;/p&gt;
&lt;p&gt;darn  adv. 非常（同 damn）adj. （非正式，加强语气）该死的&lt;/p&gt;
&lt;p&gt;Tibetan n. 西藏人；藏语adj. 西藏的；西藏人的；藏语的；西藏文化的&lt;/p&gt;
&lt;p&gt;Thai 英  [taɪ] 美  [taɪ]
n. 泰国人；泰语
adj. 泰国的；泰国人的；泰语的&lt;/p&gt;
&lt;p&gt;syllable n. 音节；只言片语；表示音节的符号v. 清晰地读（词，句） pl.syllables&lt;/p&gt;
&lt;p&gt;syllabus n. 教学大纲；&lt;/p&gt;
&lt;p&gt;hyphen n. 连字符，连字号&lt;/p&gt;
&lt;p&gt;myraid n. &amp;lt;文&amp;gt;无数，大量；（多用于古典历史剧中）一万 adj. 无数的，大量的&lt;/p&gt;
&lt;p&gt;entrench v. 使（权力、习俗、观念等）根深蒂固&lt;/p&gt;
&lt;p&gt;entrenched adj. 根深蒂固的；确立的，不容易改的 v. 确立；保证；&lt;/p&gt;
&lt;p&gt;proprietary 私有化 proprietary software&lt;/p&gt;
&lt;p&gt;hassle n. &amp;lt;非正式&amp;gt;麻烦，困难；&amp;lt;非正式&amp;gt;争论，争吵；&amp;lt;非正式&amp;gt;起哄，骚扰 v. 打扰，使烦恼；&lt;/p&gt;
&lt;p&gt;video board 显卡 field rate 场频 interlaced display 隔行显示&lt;/p&gt;
&lt;p&gt;camcorder 录像机 communication 通信&lt;/p&gt;
&lt;p&gt;clerical adj. 文书的，办事员的；牧师的，神职人员的 n. 牧师&lt;/p&gt;
&lt;p&gt;trudge v. 跋涉；n. 长途跋涉&lt;/p&gt;
&lt;p&gt;diskette n. 磁盘；[计] 软磁盘&lt;/p&gt;
&lt;p&gt;inquisitive adj. 过分好奇的，爱打听的；好学的，兴趣广泛的&lt;/p&gt;
&lt;p&gt;intrigue v. 激起……的兴趣，引发……的好奇心；密谋 n. 密谋策划，阴谋；&lt;/p&gt;
&lt;p&gt;positive whole numbers 自然数&lt;/p&gt;
&lt;p&gt;rational number 有理数 irrational number 无理数&lt;/p&gt;
&lt;p&gt;root （数学）方根； the square root of 2：2的平方根&lt;/p&gt;
&lt;p&gt;coefficients n. （数）系数；（物理）率，系数&lt;/p&gt;
&lt;p&gt;circumference n. 圆周，周长  diameter n. 直径  radius n. 半径&lt;/p&gt;
&lt;p&gt;real numbers 实数 imaginary numbers 虚数&lt;/p&gt;
&lt;p&gt;mantissa n. [数]尾数；假数；定点部分；小数部分=characteristic 首数&lt;/p&gt;
&lt;p&gt;biased exponent 偏移指数&lt;/p&gt;
&lt;p&gt;radian n. [数]弧度&lt;/p&gt;
&lt;p&gt;factorial adj. 因子的，阶乘的n. [数] 阶乘&lt;/p&gt;
&lt;p&gt;beleaguer v. 包围，围攻；使处于困境，困扰&lt;/p&gt;
&lt;p&gt;beleaguered adj. 围困的；包围的v. 围攻（beleaguer 的过去式和过去分词）&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>https://anjanavakil.github.io/about/</link>
      <pubDate>Sat, 01 Jan 2022 21:38:52 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/about/</guid>
      
        <description>&lt;p&gt;Anjana👸，软件工程一名即将毕业的大四学生。&lt;/p&gt;
&lt;p&gt;分享计算机专业知识相关👩🏻‍💻、阅读的书籍📚以及有可能的感想👻。&lt;/p&gt;
&lt;p&gt;敲代码之外的时间喜欢阅读，运动（跑步🏃🏻‍♀️、单车课🚴🏻‍♀️、瑜伽🧘🏻‍♀️、跳舞💃🏻&amp;hellip;&amp;hellip;），看电影。&lt;/p&gt;
&lt;p&gt;微读：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://anjanavakil.github.io/image/weread.jpg&#34; alt=&#34;Weread&#34;&gt;&lt;/p&gt;
&lt;p&gt;Keep：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://anjanavakil.github.io/image/keep.jpg&#34; alt=&#34;Keep&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过微信可以在微信读书一起交流：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://anjanavakil.github.io/image/wechat.jpg&#34; alt=&#34;Keep&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果春天要来，大地就使它一点点地完成🍃。&lt;/p&gt;
&lt;p&gt;“Think before you speak. Read before you think.” —Fran Lebowitz&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Effective Java: Garbage Collect</title>
      <link>https://anjanavakil.github.io/post/effective_java_gc/</link>
      <pubDate>Tue, 22 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/effective_java_gc/</guid>
      
        <description>&lt;p&gt;Effective Java 的笔记，以代码为主，批注为辅。&lt;/p&gt;
&lt;h2 id=&#34;item-7-eliminate-obsolete-object-references&#34;&gt;Item 7: Eliminate obsolete object references&lt;/h2&gt;
&lt;p&gt;消除过时的对象引用&lt;/p&gt;
&lt;h3 id=&#34;incorrect-version&#34;&gt;Incorrect Version&lt;/h3&gt;
&lt;p&gt;一个简单的stack实现的例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Can you spot the &amp;#34;memory leak&amp;#34;?  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Stack&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DEFAULT_INITIAL_CAPACITY&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DEFAULT_INITIAL_CAPACITY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;ensureCapacity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmptyStackException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * Ensure space for at least one more element, roughly
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * doubling the capacity each time the array needs to grow.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ensureCapacity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;copyOf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;那么是哪里出现了“内存泄漏”的问题呢？请认真思考🤔。&lt;/p&gt;
&lt;p&gt;提示：在&lt;code&gt;pop()&lt;/code&gt;方法里，也可以和Java源码比较发现这个隐蔽的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So where is the memory leak? If a stack grows and then shrinks, the objects that were popped off the stack will not be garbage collected, even if the program using the stack has no more references to them. This is because the stack maintains obsolete references to these objects. An obsolete reference is simply a reference that will never be dereferenced again. In this case, any references outside of the “active portion” of the element array are obsolete. The active portion consists of the elements whose index is less than size.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Memory leaks in garbage-collected languages (more properly known as unintentional object retentions) are insidious. If an object reference is unintentionally retained, not only is that object excluded from garbage collection, but so too are any objects referenced by that object, and so on. Even if only a few object references are unintentionally retained, many, many objects may be prevented from being garbage collected, with potentially large effects on performance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;corrected-version&#34;&gt;Corrected Version&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The fix for this sort of problem is simple: null out references once they become obsolete. In the case of our Stack class, the reference to an item becomes obsolete as soon as it’s popped off the stack. The corrected version of the pop method looks like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Corrected version of pop method 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmptyStackException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Eliminate obsolete reference
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;An added benefit of nulling out obsolete references is that if they are subsequently dereferenced by mistake, the program will immediately fail with a NullPointerException, rather than quietly doing the wrong thing. It is always beneficial to detect programming errors as quickly as possible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;java源码分析&#34;&gt;Java源码分析&lt;/h3&gt;
&lt;p&gt;Stack类的pop()方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;E&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;peek&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;removeElementAt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;查看removeElementAt(int index)方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AbstractList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RandomAccess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Cloneable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Serializable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;removeElementAt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elementCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayIndexOutOfBoundsException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;gt;= &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                     &lt;span class=&#34;n&#34;&gt;elementCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayIndexOutOfBoundsException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elementCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;arraycopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elementData&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elementData&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;modCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;elementCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;elementData&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elementCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* to let gc do its work */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看到&lt;code&gt;elementData[elementCount] = null; /* to let gc do its work */&lt;/code&gt;没想到源码的注释这么认真，从源码中学习。&lt;/p&gt;
&lt;h3 id=&#34;when-should-you-null-out-a-reference&#34;&gt;when should you null out a reference?&lt;/h3&gt;
&lt;p&gt;不过作者也提到了&lt;code&gt;Nulling out object references should be the exception rather than the norm.&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So when should you null out a reference? What aspect of the Stack class makes it susceptible to memory leaks? Simply put, it manages its own memory. The storage pool consists of the elements of the elements array (the object reference cells, not the objects themselves). The elements in the active portion of the array (as defined earlier) are allocated, and those in the remainder of the array are free. The garbage collector has no way of knowing this; to the garbage collector, all of the object references in the elements array are equally valid. Only the programmer knows that the inactive portion of the array is unimportant. The programmer effectively communicates this fact to the garbage collector by manually nulling out array elements as soon as they become part of the inactive portion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;只要类是自己管理内存，程序员就应该警惕内存泄漏问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Generally speaking, whenever a class manages its own memory, the programmer should be alert for memory leaks. Whenever an element is freed, any object references contained in the element should be nulled out.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;another-common-source-of-memory-leaks-is-caches&#34;&gt;Another common source of memory leaks is caches.&lt;/h3&gt;
&lt;h3 id=&#34;a-third-common-source-of-memory-leaks-is-listeners-and-other-callbacks&#34;&gt;A third common source of memory leaks is listeners and other callbacks.&lt;/h3&gt;
</description>
      
    </item>
    
    <item>
      <title>Effective Java: Builder</title>
      <link>https://anjanavakil.github.io/post/effective_java_builder/</link>
      <pubDate>Mon, 21 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/effective_java_builder/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;豆瓣🔗:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/27047716/&#34;&gt; Effective Java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/30412517/&#34;&gt;《Effective Java中文版（第3版）》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Effective Java 的笔记，以代码为主，批注为辅。&lt;/p&gt;
&lt;h2 id=&#34;item-1-consider-static-factory-methods-instead-of-constructors&#34;&gt;Item 1: Consider static factory methods instead of constructors&lt;/h2&gt;
&lt;p&gt;考虑以静态工厂方法代替构造函数&lt;/p&gt;
&lt;h2 id=&#34;item-2-consider-a-builder-when-faced-with-many-constructor-parameters&#34;&gt;Item 2: Consider a builder when faced with many constructor parameters&lt;/h2&gt;
&lt;p&gt;当构造函数有多个参数时，考虑使用builder模式&lt;/p&gt;
&lt;h3 id=&#34;1telescoping-constructor-pattern---does-not-scale-well&#34;&gt;1.Telescoping constructor pattern - does not scale well!&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;effectivejava.chapter2.item2.telescopingconstructor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Telescoping constructor pattern - does not scale well!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;NutritionFacts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// (mL)            required
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// (per container) required
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// (per serving)   optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// (g/serving)     optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// (mg/serving)    optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// (g/serving)     optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;servingSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;servings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;calories&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;fat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sodium&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;carbohydrate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;240&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重叠构造器方法：当有很多参数的时候，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端代码会很难编写&lt;/li&gt;
&lt;li&gt;难以阅读&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;没记错的话我之前做的项目中写的代码就是这样的，使用了大量不同参数的构造方法😅。&lt;/p&gt;
&lt;h3 id=&#34;2javabeans-pattern---allows-inconsistency-mandates-mutability&#34;&gt;2.JavaBeans Pattern - allows inconsistency, mandates mutability&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;effectivejava.chapter2.item2.javabeans&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// JavaBeans Pattern - allows inconsistency, mandates mutability
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;NutritionFacts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Parameters initialized to default values (if any)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Required; no default value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Required; no default value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Setters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setServingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setServings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setCalories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setFat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setSodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setCarbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setServingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;240&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setServings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setCalories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setSodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setCarbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;缺点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because construction is split across multiple calls, a JavaBean may be in an inconsistent state partway through its construction.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;构造过程中， JavaBean可能处于&lt;code&gt;不一致&lt;/code&gt;的状态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A related disadvantage is that the JavaBeans pattern precludes the possibility of making a class immutable and requires added effort on the part of the programmer to ensure thread safety.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JavaBeans 模式会使类可变，导致线程不安全的情况。&lt;/p&gt;
&lt;h3 id=&#34;3builder-pattern&#34;&gt;3.Builder Pattern&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;effectivejava.chapter2.item2.builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Builder Pattern
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;NutritionFacts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Required parameters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Optional parameters - initialized to default values
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;servingSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;servings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;carbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Builder&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;servingSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;servingSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;servings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;servings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;calories&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;fat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;fat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;sodium&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;carbohydrate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;carbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cocaCola&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NutritionFacts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;240&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;calories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sodium&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;carbohydrate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;建造者(Builder)模式&lt;/p&gt;
&lt;p&gt;1、优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保证像重叠构造器模式一样的安全性&lt;/li&gt;
&lt;li&gt;保证像JavaBeans模式一样的可读性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Instead of making the desired object directly, the client calls a constructor (or static factory) with all of the required parameters and gets a builder object. Then the client calls setter-like methods on the builder object to set each optional parameter of interest. Finally, the client calls a parameterless build method to generate the object, which is typically immutable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;客户端使用所有必需的参数(the required parameters)调用构造函数/静态工厂，得到一个 builder 对象&lt;/li&gt;
&lt;li&gt;客户端在builder对象上调用类似于 setter 的方法来设置每个相关的可选参数(each optional parameter of interest)&lt;/li&gt;
&lt;li&gt;客户端调用无参的build方法来生成对象（通常是不可变的）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3、注意点：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NutritionFacts&lt;/code&gt; 不可变。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;public static class Builder&lt;/code&gt; Builder是类的静态成员类。&lt;/p&gt;
&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In summary, the Builder pattern is a good choice when designing classes whose constructors or static factories would have more than a handful of parameters, especially if many of the parameters are optional or of identical type. Client code is much easier to read and write with builders than with telescoping constructors, and builders are much safer than JavaBeans.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设计模式果然是有实际应用的，自己学这门课程的时候，感觉例子枯燥，也没有实际应用。果然还是要看书看书📚，使用设计模式编码设计好的代码。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Effective Java: Dependency Injection</title>
      <link>https://anjanavakil.github.io/post/effective_java_di/</link>
      <pubDate>Mon, 21 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/effective_java_di/</guid>
      
        <description>&lt;p&gt;Effective Java 的笔记，以代码为主，批注为辅。&lt;/p&gt;
&lt;h2 id=&#34;item-5-prefer-dependency-injection-to-hardwiring-resources&#34;&gt;Item 5: Prefer dependency injection to hardwiring resources&lt;/h2&gt;
&lt;p&gt;优先考虑依赖注入来引入资源&lt;/p&gt;
&lt;h3 id=&#34;condition&#34;&gt;Condition&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Many classes depend on one or more underlying resources. For example, a spell checker depends on a dictionary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;inappropriate-use-of-static-utility---inflexible--untestable&#34;&gt;Inappropriate use of static utility - inflexible &amp;amp; untestable!&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Inappropriate use of static utility - inflexible &amp;amp; untestable!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SpellChecker&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Lexicon&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SpellChecker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Noninstantiable
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isValid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;suggestions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;inappropriate-use-of-singleton---inflexible--untestable&#34;&gt;Inappropriate use of singleton - inflexible &amp;amp; untestable!&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Inappropriate use of singleton - inflexible &amp;amp; untestable!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SpellChecker&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Lexicon&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SpellChecker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(...)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INSTANCE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SpellChecker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(...);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isValid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;suggestions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Neither of these approaches is satisfactory, because they assume that there is only one dictionary worth using. In practice, each language has its own dictionary, and special dictionaries are used for special vocabularies. Also, it may be desirable to use a special dictionary for testing. It is wishful thinking to assume that a single dictionary will suffice for all time.&lt;/p&gt;
&lt;p&gt;// wishful：这边应该可以理解成“痴心妄想”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Static utility classes and singletons are inappropriate for classes whose behavior is parameterized by an underlying resource.&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;dependency-injection-provides-flexibility-and-testability&#34;&gt;Dependency injection provides flexibility and testability&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;What is required is the ability to support multiple instances of the class (in our example, SpellChecker), each of which uses the resource desired by the client (in our example, the dictionary). A simple pattern that satisfies this requirement is to pass the resource into the constructor when creating a new instance. This is one form of dependency injection: the dictionary is a dependency of the spell checker and is injected into the spell checker when it is created.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;the dependency of the spell checker(dictionary) is injected into the spell checker when it is created.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Dependency injection provides flexibility and testability
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SpellChecker&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Lexicon&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SpellChecker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Lexicon&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;dictionary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;requireNonNull&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isValid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;suggestions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;In summary, do not use a singleton or static utility class to implement a class that depends on one or more underlying resources whose behavior affects that of the class, and do not have the class create these resources directly. Instead, pass the resources, or factories to create them, into the constructor (or static factory or builder). This practice, known as dependency injection, will greatly enhance the flexibility, reusability, and testability of a class.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Coders At Work 编程人生</title>
      <link>https://anjanavakil.github.io/post/coders_at_work/</link>
      <pubDate>Sun, 20 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/coders_at_work/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;豆瓣🔗:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/3673223/&#34;&gt;Coders At Work&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/5355285/&#34;&gt;《编程人生：15位软件先驱访谈录》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一次读这本书读的是英文版，说实话当时读的云里雾里的😶‍🌫️，读了一章就丢下了，没有太大收获。第二次重新拾起中文版，再对照英文版，还是学到了蛮多东西的。通过计算机行业顶级程序员的谈话，对编程、程序员有了更多的理解。&lt;/p&gt;
&lt;h2 id=&#34;jamie-zawinski&#34;&gt;Jamie Zawinski&lt;/h2&gt;
&lt;p&gt;Lisp程序员，XEmacs开发者，Netscape浏览器和Mozilla核心开发者。&lt;/p&gt;
&lt;p&gt;看了第一篇Jamie Zawinski的访谈，就带给我很多的思考：&lt;/p&gt;
&lt;p&gt;1、每个人都有自己的路，对于人生的意义我想只有个人才知道是不是这短暂一生想要追求的。Zawinski只有大概高中的学历，但并不妨碍他在计算机领域的贡献和对于编程的热爱。他读书很少，但是他有着好奇心，通过看源码和官方的手册学习。&lt;/p&gt;
&lt;p&gt;2、他强调了“完成比完美重要” 。&lt;code&gt;“公司付你钱不是为了让你来写代码，而是要发布产品”&lt;/code&gt;商业就是这样，一个产品更重要的是时间和时机。&lt;/p&gt;
&lt;p&gt;3、提到一些比较古老的编程语言，并没有学过，所以对于自己有点陌生。倒是让我想起&lt;code&gt;Alan J. Perlis&lt;/code&gt;说过的&lt;code&gt;“A language that doesn&#39;t affect the way you think about programming, is not worth knowing. ”&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;所以每年接触学习一种不同的语言，不依赖于已有的思维定式，转换思维。（和Brad Fitzpatrick提高编程能力的方法不谋而合：下文Brad Fitzpatrick部分的第8点）&lt;/p&gt;
&lt;p&gt;Being totally outside the comfort zone.&lt;/p&gt;
&lt;p&gt;4、动手实践的重要性：自己动手太少，多实践。Talk is cheap. Show me the code.&lt;/p&gt;
&lt;p&gt;5、大佬对于C++的抨击，这倒是让我有些惊讶。自己的潜意识认为C++因为难所以比较高不可攀的感觉，自己的固化思维真是害自己不浅。&lt;/p&gt;
&lt;p&gt;6、“不要害怕自己的无知”：本来自己是不怕问问题的，但后来不知道为什么怕暴露自己的缺点和无知，渐渐问人问题也犹犹豫豫磕磕巴巴的，所以勇敢地问出来。“不知道某件东西并不代表你笨，只是暂时还不知道罢了”。&lt;/p&gt;
&lt;h2 id=&#34;brad-fitzpatrick&#34;&gt;Brad Fitzpatrick&lt;/h2&gt;
&lt;p&gt;书中唯一的80后，LiveJournal和memcached开发者。现效力于Google。&lt;/p&gt;
&lt;h3 id=&#34;1学习东西&#34;&gt;1、学习东西&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: It does seem that while you were writing all this stuff because you needed it, you also enjoyed doing it.&lt;/p&gt;
&lt;p&gt;Fitzpatrick: Oh, yeah. I definitely try to find an excuse to use anything, to learn it. Because you never learn something until you have to write something in it, until you have to live and breathe it. It&amp;rsquo;s one thing to go learn a language for fun, but until you write some big, complex system in it, you don&amp;rsquo;t really learn it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发现自己学习计算机的一些技术时就是三分钟热度，入门然后就没了，导致没有对哪一门语言/技术精通。认识到了大学本科的一些弊端，知道了很多技术，但10,000小时约等于3年，大学4年只是入门了。人生的路很长，大部分人的大部分时间都是要在工作中度过的，所以选择自己热爱的然后精进技术。就像费曼说的：&lt;code&gt;仅仅知道一个事物的名称其实等同于对其一无所知&lt;/code&gt;。简单知道一门语言和技术的名称，仅仅只是信息而已。对于我这样的普通人，10,000小时的训练必不可少。&lt;/p&gt;
&lt;h3 id=&#34;2当代程序员是否有必要学习汇编语言芯片等&#34;&gt;2、当代程序员是否有必要学习汇编语言/芯片等&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;We were getting a lot of wins for really low-level stuff. I had somebody recently tell me about something: “Java takes care of that; we don&amp;rsquo;t have to deal with that.” I was like, “No, Java can&amp;rsquo;t take care of this because I know what kernel version you&amp;rsquo;re using and the kernel doesn&amp;rsquo;t support it. Your virtual machine may be hiding that from you and giving you some abstraction that makes it look like that&amp;rsquo;s efficient, but it&amp;rsquo;s only efficient when you&amp;rsquo;re running it on this kernel.” I get frustrated if people don&amp;rsquo;t understand at least the surface of the whole stack.&lt;/p&gt;
&lt;p&gt;In practice, nothing works. There are all these beautiful abstractions that are backed by shit. The implementation of libraries that look like they could be beautiful are shit. And so if you&amp;rsquo;re the one responsible for the cost of buying servers, or reliability—if you&amp;rsquo;re on call for pages—it helps to actually know what&amp;rsquo;s going on under the covers and not trust everyone else&amp;rsquo;s libraries, and code, and interfaces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Actually the JVM isn&amp;rsquo;t that bad. I guess it&amp;rsquo;s when people have blind faith in their abstractions without understanding what&amp;rsquo;s going on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3学校课程的批判&#34;&gt;3、学校课程的批判&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: You had a lot of programming experience by the time you got to college and studied computer science. How did that work out?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: I skipped a lot of my early C.S. classes, because they were just really boring. I would go and take the tests. Then towards the end they got kind of fun, once you get to the 300- and 400-level classes. But right when it got interesting, I graduated. And they wouldn&amp;rsquo;t let me take the fun grad-level classes, because I wasn&amp;rsquo;t a grad student.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说实话，现在互联网的资源太多了。MIT、Stanford、CMU等大学的课程视频、lab都可以找到资源，所以更加开放的世界，当下的我们应该好好珍惜利用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I remember in the compiler class, the final project was we had to take this existing language that we had been playing with and add a whole bunch of features, including one feature of our own choosing as the bonus part of the project. So I chose to implement run-time array bounds checking. Anyway, the professor took our compiled binary and ran his test suite against it, and it failed a couple of his tests. He was like, “Sorry, you get a C because you failed my unit test,” When I went to look at it, I was like, “You have off-by-﻿ones in your test suite.” So he gave me the grade back and I got an A, but I never got the bonus points for adding a feature to the language. I was angry at school at that point.&lt;/p&gt;
&lt;p&gt;And I remember our database class was taught by someone who, it seemed, had no real-world experience with databases. At this point I&amp;rsquo;d worked with Oracle, Microsoft Server, and tons of MySQL. So I was asking all these real-world questions I actually wanted answers to—things that were melting right now—they would just give me some textbook answer. I&amp;rsquo;m like, “No, no. That doesn&amp;rsquo;t work.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一直认为美国的课程老师都会比较灵活，没想到还是遭到了大佬的批判与吐槽。&lt;/p&gt;
&lt;h3 id=&#34;4学术界和工业界paper的交界处&#34;&gt;4、学术界和工业界paper的交界处&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: You just mentioned papers from the academy and from industry. Do you have any sense of whether those two meet in the right place these days?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: They kind of feel about the same to me. But it&amp;rsquo;s more interesting, a lot of times, to read the industry ones because you know they did it to solve a problem and their solution works as opposed to, “We&amp;rsquo;d think it would be cool if—” There&amp;rsquo;s a lot of crazier stuff that comes out of academia and it doesn&amp;rsquo;t actually work, so it&amp;rsquo;s just a crazy idea. Maybe they turn it into commercial things later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;5设计软件&#34;&gt;5、设计软件&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: How do you design software?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: I start with interfaces between things. What are the common methods, or the common RPCs, or the common queries. If it&amp;rsquo;s storage, I try to think, what are the common queries? What indexes do we need? How are the data going to be laid out on disk? Then I write dummy mocks for different parts and flesh it out over time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;6先做hard的事&#34;&gt;6、先做hard的事&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: After you write a bunch of code do you ever discover that you really need to reconsider your original plan?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: Sometimes. But I&amp;rsquo;ve started with the hard bits or the parts I was unsure of, and tried to implement those parts first. I try not to put off anything hard or surprising to the end; I enjoy doing the hard things first. The projects that I never finish—my friends give me shit that it&amp;rsquo;s a whole bunch—it&amp;rsquo;s because I did the hard part and I learned what I wanted to learn and I never got around to doing the boring stuff.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先做hard的事，学习想要学习的东西，至于boring的事留给别人做就好。&lt;/p&gt;
&lt;h3 id=&#34;7招聘和辨识优秀的程序员&#34;&gt;7、招聘和辨识优秀的程序员&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: So you&amp;rsquo;ve hired for your own company, and I assume you&amp;rsquo;ve been involved in hiring at Google. How do you recognize a great programmer?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: I often look for people that have done, like, a lot of stuff on their own that wasn&amp;rsquo;t asked of them. Not just their school project or just what their previous employer had them do. Somebody who was passionate about something and had some side project. How did they maintain it and how serious did they get with it? Or do they do a lot of quick hacks and abandon them?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;8提高编程能力&#34;&gt;8、提高编程能力&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: Is there anything that you did specifically to improve your skill as a programmer?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: Sometimes I&amp;rsquo;ll go out of my way to write something in a language that I would rather not write it in—and I know it&amp;rsquo;ll take me longer to write in that language—because I know I&amp;rsquo;ll be better in the end. Like when I got to Google, there were a lot of times where I was writing one-off things and I&amp;rsquo;d go to write it in Perl. Then I&amp;rsquo;d be like, “Ah, no, I should write this in Python.” Now I write tons of Python and it doesn&amp;rsquo;t bother me—I barely have to look things up. Perlbal was originally written in C# just to learn that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;9编程能力之外的能力&#34;&gt;9、编程能力之外的能力&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: And are there skills apart from programming itself that you think would-be programmers should develop?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: There&amp;rsquo;s communication, but I&amp;rsquo;m not sure that&amp;rsquo;s something you can really practice. Deal with people on mailing lists a lot. Written communication style goes a long way. But that&amp;rsquo;s a general life thing, right? There was some study about who was successful after high school. Was it the smart kids or the social kids? It turned out that it was the social kids who ended up making all the money in life, not the people with the good grades. I thought that was interesting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;10编程是年轻人的游戏&#34;&gt;10、编程是年轻人的游戏？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Seibel: You&amp;rsquo;re 28 now. Do you have any worries that programming is sort of a young person&amp;rsquo;s game, that you&amp;rsquo;re going to lose a step as you get older?&lt;/p&gt;
&lt;p&gt;Fitzpatrick: No. The worst case, I could always just stop and work on fun things on my own. I don&amp;rsquo;t feel like I&amp;rsquo;m competing with anyone right now and I don&amp;rsquo;t really care if other people are better because I feel like there are tons of people who are better already. I figure we are always in the middle anyway, so I&amp;rsquo;m happy to stay in the middle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;全文采访的人物中就 Fitzpatrick 最年轻了，提问者居然问了年龄这件事，难道是因为年轻的缘故吗😳？&lt;/p&gt;
&lt;p&gt;尤其喜欢这句&lt;code&gt;I don&#39;t really care if other people are better because I feel like there are tons of people who are better already. &lt;/code&gt;好率性🙌🏻。&lt;/p&gt;
&lt;p&gt;15位软件先驱的访谈，暂时看完了前两位。未完待续&amp;hellip;&amp;hellip;.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Epigrams on Programming (&lt;a href=&#34;http://pu.inf.uni-tuebingen.de/users/klaeren/epigrams.html&#34;&gt;http://pu.inf.uni-tuebingen.de/users/klaeren/epigrams.html&lt;/a&gt;)&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
      
    </item>
    
    <item>
      <title>Designing Data-Intensive Applications Notes</title>
      <link>https://anjanavakil.github.io/post/designing_data-intensive_applications/</link>
      <pubDate>Thu, 17 Mar 2022 22:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/designing_data-intensive_applications/</guid>
      
        <description>&lt;h3 id=&#34;atomic&#34;&gt;atomic&lt;/h3&gt;
&lt;p&gt;In the context of concurrent operations: describing an operation that appears to take effect at a single point in time, so another concurrent process can never encounter the operation in a “half-finished” state. See also isolation.&lt;/p&gt;
&lt;p&gt;In the context of transactions: grouping together a set of writes that must either all be committed or all be rolled back, even if faults occur.&lt;/p&gt;
&lt;h3 id=&#34;rest&#34;&gt;REST&lt;/h3&gt;
&lt;p&gt;REST is not a protocol, but rather a design philosophy that builds upon the principles of HTTP. It emphasizes simple data formats, using URLs for identifying resources and using HTTP features for cache control, authentication, and content type negotiation. REST has been gaining popularity compared to SOAP, at least in the context of cross-organizational service integration, and is often associated with microservices. An API designed according to the principles of REST is called RESTful.&lt;/p&gt;
&lt;h3 id=&#34;message-brokermessage-queuemessage-oriented-middleware&#34;&gt;message broker/message queue/message-oriented middleware&lt;/h3&gt;
&lt;p&gt;Using a message broker has several advantages compared to direct RPC:&lt;/p&gt;
&lt;p&gt;It can act as a buffer if the recipient is unavailable or overloaded, and thus improve system reliability.&lt;/p&gt;
&lt;p&gt;It can automatically redeliver messages to a process that has crashed, and thus prevent messages from being lost.&lt;/p&gt;
&lt;p&gt;It avoids the sender needing to know the IP address and port number of the recipient (which is particularly useful in a cloud deployment where virtual machines often come and go).&lt;/p&gt;
&lt;p&gt;It allows one message to be sent to several recipients. It logically decouples the sender from the recipient (the sender just publishes messages and doesn’t care who consumes them).&lt;/p&gt;
&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;p&gt;Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems by Martin Kleppmann&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Show Your Work!</title>
      <link>https://anjanavakil.github.io/post/show_your_work/</link>
      <pubDate>Wed, 16 Mar 2022 21:00:00 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/show_your_work/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;douban🔗: &lt;a href=&#34;https://book.douban.com/subject/25857796/&#34;&gt;Show Your Work! 10 Ways to Share Your Creativity and Get Discovered&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is my first English book review for the second English book I entirely finished reading in 2022!&lt;/p&gt;
&lt;p&gt;The book is brief and there is not a lot of unfamiliar vocabulary so I read it in two hours. The author listed 10 approaches for ordinary individuals to share creativity and get discovered. The book demonstrated how to think about one&amp;rsquo;s work as a never-ending process, how to share one&amp;rsquo;s process in a way that attracts people who might be interested in what they do, and how to deal with the ups and downs of putting oneself and one&amp;rsquo;s work out in the world.&lt;/p&gt;
&lt;p&gt;In a nutshell, it offers ten transformative rules for being open, generous, brave, productive.&lt;/p&gt;
&lt;p&gt;The author&amp;rsquo;s website is worth a look:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://austinkleon.com/&#34;&gt;https://austinkleon.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Austin Kleon is a writer who draws. In his book, you will find a series of concise pictures that include the core ideas he wanted to express. Readers can also grasp the major themes of this chapter through the images. My blog and writing, I believe, are also a way of showing my work.&lt;/p&gt;
&lt;p&gt;The book contains 10 ways:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;You Don&amp;rsquo;t Have to Be a Genius.&lt;/li&gt;
&lt;li&gt;Think Process, Not Product.&lt;/li&gt;
&lt;li&gt;Share Something Small Everyday.&lt;/li&gt;
&lt;li&gt;Open Up Your Cabinet of Curiosities.&lt;/li&gt;
&lt;li&gt;Tell Good Stories.&lt;/li&gt;
&lt;li&gt;Teach What Your Know.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t Turn Into Human Spam.&lt;/li&gt;
&lt;li&gt;Learn to Take a Punch.&lt;/li&gt;
&lt;li&gt;Sell Out.&lt;/li&gt;
&lt;li&gt;Stick Around.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;This statement impressed me when I was reading:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The world is changing at such a rapid rate that it&amp;rsquo;s turning us all into amateurs. Even for professionals, the best way to flourish is to retain an amateur&amp;rsquo;s spirit and embrace uncertainty and the unknown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am majoring in Software Engineering, and I am convinced that I need to learn many cutting-edge technologies with an open mind and curiosity.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Small thing, over time. can get big.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this fast-paced world of technology, it is important to stay curious and open to learn and apply leading-edge software and methods.&lt;/p&gt;
&lt;p&gt;There are serval sentences in the book that I learned something from:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you look back closely at history, many of the people who we think of as lone geniuses were actually part of “a whole scene of people who were supporting each other, looking at each other’s work, copying from each other, stealing ideas, and contributing ideas.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Scenius doesn’t take away from the achievements of those great individuals; it just acknowledges that good work isn’t created in a vacuum and that creativity is always, in some sense, a collaboration, the result of a mind connected to other minds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Amateurs might lack formal training, but they’re all lifelong learners, and they make a point of learning in the open, so that others can learn from their failures and successes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Find a scenius, pay attention to what others are sharing, and then start taking note of what they’re not sharing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Dig into almost every overnight success story and you’ll find about a decade’s worth of hard work and perseverance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A daily dispatch is even better than a résumé or a portfolio because it shows what we’re working on right now. When the artist Ze Frank was interviewing job candidates, he complained, “When I ask them to show me work, they show me things from school, or from another job, but I’m more interested in what they did last weekend.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Fill your website with your work and your ideas and the stuff you care about.Over the years, you will be tempted to abandon it for the newest, shiniest social network. Don’t give in. Don’t let it fall into neglect. Think about it in the long term. Stick with it, maintain it, and let it change with you over time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Every email you send, every text, every conversation, every blog comment, every tweet, every photo, every video—they’re all bits and pieces of a multimedia narrative you’re constantly constructing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As every writer knows, if you want to be a writer, you have to be a reader first.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The more people come across your work, the more criticism you’ll face.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Look for something new to learn, and when you find it, dedicate yourself to learning it out in the open.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All you have to do is show your work.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Lambda表达式</title>
      <link>https://anjanavakil.github.io/post/lambda_expression/</link>
      <pubDate>Sat, 12 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/lambda_expression/</guid>
      
        <description>&lt;p&gt;之前技术博客都是在CSDN上发表的，好久没用了，登录上去居然有人给我以前的博客点赞评论，尽管很少但发现还是有人看的。看了一下之前写的博客，发现不是一般的烂，不知道对于他们是不是一种浪费时间的行为🤣。&lt;/p&gt;
&lt;p&gt;最近查询问题/解决bug，发现CSDN很多博客质量不太高（包括我的），有好的博客但是真的要筛选看过几篇后才能看到好的，而且前面浪费时间浏览的几篇有些基本是抄袭的。所以还是下定决心好好写博客，不必高产，但每一篇应该认真写。自己总结学习，也尽力让有缘看到自己博客的同学有所得，而不是内心想着：这又是一篇垃圾博客🌚。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;lambda表达式&#34;&gt;Lambda表达式&lt;/h2&gt;
&lt;h3 id=&#34;使用&#34;&gt;使用&lt;/h3&gt;
&lt;p&gt;Runnable接口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Runnable接口的匿名内部类
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Use in Java 7 or earlier:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Runnable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;inside runnable using anonymous inner class&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Thread构造函数中使用lambda表达式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;inside runnable using a lambda&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 将lambda表达式赋给变量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Runnable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;using a lambda as a variable&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;FilenameFilter接口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;src/main/java&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;asList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// FilenameFilter的匿名内部类实现
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Using anonymous inner class
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FilenameFilter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.java&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;asList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// FilenameFilter接口的lambda表达式实现
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Use a lambda expression
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.java&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;asList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 具有显式数据类型的lambda表达式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.java&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;asList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// lambda代码块(block lambda)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Notice:不能省略return关键字
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.java&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;asList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;asList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MyFilter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Arrays&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;asList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;MyFilter.java&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyFilter&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FilenameFilter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.java&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;lambda 表达式在任何情况下都不能脱离上下文存在，上下文指定了将表达式赋给哪个函数式接口。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;lambda 表达式可以是：&lt;/p&gt;
&lt;p&gt;1、方法的参数&lt;/p&gt;
&lt;p&gt;2、方法的返回类型&lt;/p&gt;
&lt;p&gt;3、引用&lt;/p&gt;
&lt;p&gt;无论哪种情况，赋值类型必须为函数式接口。&lt;/p&gt;
&lt;h3 id=&#34;函数式接口&#34;&gt;函数式接口:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Runnable.java:&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * The {@code Runnable} interface should be implemented by any
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * class whose instances are intended to be executed by a thread. The
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * class must define a method of no arguments called {@code run}.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * This interface is designed to provide a common protocol for objects that
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * wish to execute code while they are active. For example,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * {@code Runnable} is implemented by class {@code Thread}.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * Being active simply means that a thread has been started and has not
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * yet been stopped.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * In addition, {@code Runnable} provides the means for a class to be
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * active while not subclassing {@code Thread}. A class that implements
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * {@code Runnable} can run without subclassing {@code Thread}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * by instantiating a {@code Thread} instance and passing itself in
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * as the target.  In most cases, the {@code Runnable} interface should
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * be used if you are only planning to override the {@code run()}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * method and no other {@code Thread} methods.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * This is important because classes should not be subclassed
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * unless the programmer intends on modifying or enhancing the fundamental
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * behavior of the class.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @author  Arthur van Hoff
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @see     java.lang.Thread
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @see     java.util.concurrent.Callable
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @since   1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@FunctionalInterface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Runnable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * When an object implementing interface {@code Runnable} is used
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * to create a thread, starting the thread causes the object&amp;#39;s
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * {@code run} method to be called in that separately executing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * thread.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * The general contract of the method {@code run} is that it may
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * take any action whatsoever.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @see     java.lang.Thread#run()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;从源码中可以看到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In most cases, the {@code Runnable} interface should be used if you are only planning to override the {@code run()} method and no other {@code Thread} methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这也说明了应该面向接口编程，多用接口，而不是继承。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Callable.java:&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.concurrent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * A task that returns a result and may throw an exception.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * Implementors define a single method with no arguments called
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * {@code call}.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;p&amp;gt;The {@code Callable} interface is similar to {@link
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * java.lang.Runnable}, in that both are designed for classes whose
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * instances are potentially executed by another thread.  A
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * {@code Runnable}, however, does not return a result and cannot
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * throw a checked exception.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;p&amp;gt;The {@link Executors} class contains utility methods to
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * convert from other common forms to {@code Callable} classes.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @see Executor
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @since 1.5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @author Doug Lea
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @param &amp;lt;V&amp;gt; the result type of method {@code call}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@FunctionalInterface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Callable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * Computes a result, or throws an exception if unable to do so.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @return computed result
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     * @throws Exception if unable to compute a result
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;V&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The {@code Callable} interface is similar to {@link java.lang.Runnable}, in that both are designed for classes whose instances are potentially executed by another thread.  A {@code Runnable}, however, does not return a result and cannot throw a checked exception.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说明了Runnable和Callable的异同点。&lt;/p&gt;
&lt;p&gt;Runnable是在package java.lang中，Callable是在package java.util.concurrent中；&lt;/p&gt;
&lt;p&gt;Java中只有&lt;code&gt;java.lang&lt;/code&gt;包下的类可以直接使用，不需要导入。&lt;/p&gt;
&lt;p&gt;同时，从&lt;code&gt;Runnable.java&lt;/code&gt;和&lt;code&gt;Callable.java&lt;/code&gt;都可以看到&lt;code&gt;@FunctionalInterface&lt;/code&gt;注解。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;FunctionalInterface.java:&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.lang.annotation.*&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * An informative annotation type used to indicate that an interface
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * type declaration is intended to be a &amp;lt;i&amp;gt;functional interface&amp;lt;/i&amp;gt; as
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * defined by the Java Language Specification.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * Conceptually, a functional interface has exactly one abstract
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * method.  Since {@linkplain java.lang.reflect.Method#isDefault()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * default methods} have an implementation, they are not abstract.  If
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * an interface declares an abstract method overriding one of the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * public methods of {@code java.lang.Object}, that also does
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;em&amp;gt;not&amp;lt;/em&amp;gt; count toward the interface&amp;#39;s abstract method count
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * since any implementation of the interface will have an
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * implementation from {@code java.lang.Object} or elsewhere.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;p&amp;gt;Note that instances of functional interfaces can be created with
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * lambda expressions, method references, or constructor references.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;p&amp;gt;If a type is annotated with this annotation type, compilers are
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * required to generate an error message unless:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;ul&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;li&amp;gt; The type is an interface type and not an annotation type, enum, or class.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;li&amp;gt; The annotated type satisfies the requirements of a functional interface.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;/ul&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;lt;p&amp;gt;However, the compiler will treat any interface meeting the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * definition of a functional interface as a functional interface
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * regardless of whether or not a {@code FunctionalInterface}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * annotation is present on the interface declaration.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @jls 4.3.2 The Class Object
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @jls 9.8 Functional Interfaces
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @jls 9.4.3 Interface Method Body
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @jls 9.6.4.9 @FunctionalInterface
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; * @since 1.8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Documented&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Retention&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;RUNTIME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ElementType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;TYPE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nd&#34;&gt;@interface&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FunctionalInterface&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that instances of functional interfaces can be created with lambda expressions, method references, or constructor references.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;函数式接口的实例可以使用lambda表达式，方法引用或构造函数引用创建。&lt;/p&gt;
&lt;p&gt;从源码中也可以看到&lt;code&gt;Java文档注释(doc comment)&lt;/code&gt;相关内容。&lt;/p&gt;
&lt;h3 id=&#34;java文档注释doc-comment&#34;&gt;Java文档注释(doc comment)&lt;/h3&gt;
&lt;p&gt;1、用于编写代码API的文档。&lt;/p&gt;
&lt;p&gt;2、是普通的多行注释，以&lt;code&gt;/**&lt;/code&gt;开头，以&lt;code&gt;*/&lt;/code&gt;结尾。(通常使用的多行注释是以&lt;code&gt;/*&lt;/code&gt;开头，以&lt;code&gt;*/&lt;/code&gt;结尾)&lt;/p&gt;
&lt;p&gt;3、通过阅读就可以明白：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@author显示为Author&lt;/li&gt;
&lt;li&gt;@see显示为See Also&lt;/li&gt;
&lt;li&gt;@since显示为Since&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标签太多一次记不过来，每次学几个就会轻松很多。&lt;/p&gt;
&lt;p&gt;4、可以包含简单的HTML标签：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;i&amp;gt; 强调
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;code&amp;gt; 显示类、方法和字段的名称
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;p&amp;gt; 将说明分成很多段落
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; 显示无序列表
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;但是不能包含HTML主结构标签，例如&amp;lt;h2&amp;gt; &amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(因为编写的内容会被嵌入复杂的大型HTML文档，以免影响大型HTML文档的结构)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;发现源码就是最可靠的文档，从源码中还可以学习代码书写、注释书写。&lt;/strong&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;《Java攻略：Java常见问题的简单解法》 by 肯·寇森(Ken Kousen)&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
      
    </item>
    
    <item>
      <title>《编写可读代码的艺术》</title>
      <link>https://anjanavakil.github.io/post/the_art_of_readable_code/</link>
      <pubDate>Fri, 04 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the_art_of_readable_code/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/10797189/&#34;&gt;《编写可读代码的艺术》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于编码规范和编写高质量代码类的书籍，印象中第一本看完的应该是&lt;a href=&#34;https://book.douban.com/subject/27605355/&#34;&gt;《阿里巴巴Java开发手册》&lt;/a&gt;，《编写可读代码的艺术》是第二本读完的书籍。读的纸质书，小小一册，几天很快就读完了（本来有中英两种版本可选，可为了快速看完而且豆瓣中文版评分也还不错，就偷懒选择了中文版😬），但最难的是将书中优秀的部分真正应用于自己的代码编写中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Clean Code《代码整洁之道》&lt;/code&gt;、&lt;code&gt;Clean Coder《程序员的职业修养》&lt;/code&gt;、&lt;code&gt;Code Complete《代码大全》&lt;/code&gt;、&lt;code&gt;Programming Pearls《编程珠玑》&lt;/code&gt;等好书都是自己豆瓣想读但仅仅翻过几页的书籍，所以还是要挤出时间慢慢读完这些经典之作。&lt;/p&gt;
&lt;p&gt;大概总结如下：&lt;/p&gt;
&lt;p&gt;1、“可读性基本定理”：代码的写法应当使别人理解它所需的时间最小化。&lt;/p&gt;
&lt;p&gt;2、把信息塞入名字中：仅通过读到名字就可以获得大量信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用专业的单词——例如，不用&lt;code&gt;Get&lt;/code&gt;，而用&lt;code&gt;Fetch&lt;/code&gt;或者&lt;code&gt;Download&lt;/code&gt;可能会更好，这由上下文决定。&lt;/li&gt;
&lt;li&gt;避免空泛的名字，像&lt;code&gt;tmp&lt;/code&gt;和&lt;code&gt;retval&lt;/code&gt;，除非使用它们有特殊的理由。&lt;/li&gt;
&lt;li&gt;使用具体的名字来更细致地描述事物——&lt;code&gt;ServerCanStart()&lt;/code&gt;这个名字就比&lt;code&gt;CanListenOnPort&lt;/code&gt;更不清楚。&lt;/li&gt;
&lt;li&gt;给变量名带上重要的细节——例如，在值为毫秒的变量后面加上&lt;code&gt;_ms&lt;/code&gt;，或者在还需要转义的，未处理的变量前面加上&lt;code&gt;raw_&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;为作用域大的名字采用更长的名字——不要用让人费解的一个或两个字母的名字来命名在几屏之间都可见的变量。对于只存在于几行之间的变量用短一点的名字更好。&lt;/li&gt;
&lt;li&gt;有目的地使用大小写、下划线等——例如，你可以在类成员和局部变量后面加上&amp;quot;&lt;code&gt;_&lt;/code&gt;&amp;ldquo;来区分它们。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3、不会误解的名字是最好的名字——阅读你代码的人应该理解你的本意，并且不会有其他的理解。遗憾的是，很多英语单词在用来编程时是多义性的，例如&lt;code&gt;filter&lt;/code&gt;、&lt;code&gt;length&lt;/code&gt;和&lt;code&gt;limit&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在你决定使用一个名字以前，要吹毛求疵一点，来想象一下你的名字会被误解成什么。最好的名字是不会误解的。&lt;/p&gt;
&lt;p&gt;当要定义一个值的上限或下限时，&lt;code&gt;max_&lt;/code&gt;和&lt;code&gt;min_&lt;/code&gt;是很好的前缀。对于包含的范围，&lt;code&gt;first&lt;/code&gt;和&lt;code&gt;last&lt;/code&gt;是好的选择。对于包含/排除范围，&lt;code&gt;begin&lt;/code&gt;和&lt;code&gt;end&lt;/code&gt;是最好的选择，因为它们最常用。&lt;/p&gt;
&lt;p&gt;当为布尔值命名时，使用&lt;code&gt;is&lt;/code&gt;和&lt;code&gt;has&lt;/code&gt;这样的词来明确表示它是个布尔值，避免使用反义的词（例如&lt;code&gt;disable_ssl&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;要小心用户对特定词的期望。例如，用户会期望&lt;code&gt;get()&lt;/code&gt;或者&lt;code&gt;size()&lt;/code&gt;是轻量的方法。&lt;/p&gt;
&lt;p&gt;4、有美感的代码：通过把代码用一致的、有意义的方式“格式化”，可以把代码变得更容易读，并且可以读得更快。&lt;/p&gt;
&lt;p&gt;具体技巧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果多个代码块做相似的事情，尝试让它们有同样的剪影。&lt;/li&gt;
&lt;li&gt;把代码按“&lt;code&gt;列&lt;/code&gt;”对齐可以让代码更容易浏览。&lt;/li&gt;
&lt;li&gt;如果在一段代码中提到&lt;code&gt;A、B和C&lt;/code&gt;，那么不要在另一段中说&lt;code&gt;B、C和A&lt;/code&gt;。选择一个有意义的顺序，并始终用这样的顺序。&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;空行&lt;/code&gt;来把大块代码分成&lt;code&gt;逻辑&lt;/code&gt;上的“段落”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5、注释的目的是帮助读者了解作者在写代码时已经知道的那些事情。&lt;/p&gt;
&lt;p&gt;什么地方不需要注释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能从代码本身中迅速地推断的事实。&lt;/li&gt;
&lt;li&gt;用来粉饰烂代码（例如蹩脚的函数名）的“&lt;code&gt;拐杖式注释&lt;/code&gt;”——应该把代码改好。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应该记录下来的想法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于为什么代码写成这样而不是那样的内在理由（“&lt;code&gt;指导性批注&lt;/code&gt;”）。&lt;/li&gt;
&lt;li&gt;代码中的缺陷，使用像&lt;code&gt;TODO：&lt;/code&gt;或者&lt;code&gt;XXX：&lt;/code&gt;这样的标记。&lt;/li&gt;
&lt;li&gt;常量背后的故事，为什么是这个值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;站在读者的立场上思考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;预料到代码中哪些部分会让读者说：“啊？”并且给它们加上注释。&lt;/li&gt;
&lt;li&gt;为普通读者意料之外的行为加上注释。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;文件/类&lt;/code&gt;的级别上使用“&lt;code&gt;全局观&lt;/code&gt;”注释来解释所有的部分是如何一起工作的。&lt;/li&gt;
&lt;li&gt;用注释来总结代码块，使读者不致迷失在细节中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;6、如何把更多的信息装入更小的空间里。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当像&amp;rdquo;&lt;code&gt;it&lt;/code&gt;&amp;ldquo;和&amp;rdquo;&lt;code&gt;this&lt;/code&gt;&amp;ldquo;这样的代词可能指代多个事物时，避免使用它们。&lt;/li&gt;
&lt;li&gt;尽量精确地描述函数的行为。&lt;/li&gt;
&lt;li&gt;在注释中用精心挑选的输入/输出例子进行说明。&lt;/li&gt;
&lt;li&gt;声明代码的高层次意图，而非明显的细节。&lt;/li&gt;
&lt;li&gt;用嵌入的注释（如&lt;code&gt;Function（/* *arg=* */……）&lt;/code&gt;）来解释难以理解的函数参数。&lt;/li&gt;
&lt;li&gt;用含义丰富的词来使注释简洁。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;7、让代码的控制流更易读：&lt;/p&gt;
&lt;p&gt;在写一个比较时（&lt;code&gt;while（bytes_expected＞bytes_received）&lt;/code&gt;），把改变的值写在左边并且把更稳定的值写在右边更好一些（&lt;code&gt;while（bytes_received＜bytes_expected）&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;可以重新排列&lt;code&gt;if/else&lt;/code&gt;语句中的语句块。通常来讲，先处理正确的/简单的/有趣的情况。有时这些准则会冲突，但是当不冲突时，这是要遵循的经验法则。&lt;/p&gt;
&lt;p&gt;某些编程结构，像三目运算符&lt;code&gt;（:?）&lt;/code&gt;、&lt;code&gt;do/while&lt;/code&gt;循环，以及&lt;code&gt;goto&lt;/code&gt;经常会导致代码的可读性变差。最好不要使用它们，因为总是有更整洁的代替方式。&lt;/p&gt;
&lt;p&gt;嵌套的代码块需要更加集中精力去理解。每层新的嵌套都需要读者把更多的上下文“&lt;code&gt;压入栈&lt;/code&gt;”。应该把它们改写成更加“线性”的代码来避免深嵌套。&lt;/p&gt;
&lt;p&gt;通常来讲提早返回可以减少嵌套并让代码整洁。“保护语句”（在函数顶部处理简单的情况时）尤其有用。&lt;/p&gt;
&lt;p&gt;8、巨大的表达式很难思考，拆分表达式的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入“&lt;code&gt;解释变量&lt;/code&gt;”来代表较长的子表达式。这种方式有三个好处：
&lt;ul&gt;
&lt;li&gt;它把巨大的表达式拆成小段。&lt;/li&gt;
&lt;li&gt;它通过用简单的名字描述子表达式来让代码文档化。&lt;/li&gt;
&lt;li&gt;它帮助读者识别代码中的主要概念。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用德摩根定理来操作逻辑表达式——这个技术有时可以把布尔表达式用更整洁的方式重写（例如&lt;code&gt;if（！（a ＆＆！b））&lt;/code&gt;变成&lt;code&gt;if（！a||b））&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;9、程序中的变量会变得快速累积而变得难以跟踪。可以通过减少变量的数量和让它们尽量“轻量级”来让代码更有可读性。具体有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少变量，即那些妨碍的变量。可以通过立刻处理结果来消除“&lt;code&gt;中间结果&lt;/code&gt;”变量。&lt;/li&gt;
&lt;li&gt;减小每个变量的&lt;code&gt;作用域&lt;/code&gt;，&lt;code&gt;越小越好&lt;/code&gt;。把变量移到一个有最少代码可以看到它的地方。眼不见，心不烦。&lt;/li&gt;
&lt;li&gt;只写一次的变量更好。那些只设置一次值的变量（或者&lt;code&gt;const&lt;/code&gt;、&lt;code&gt;final&lt;/code&gt;、&lt;code&gt;常量&lt;/code&gt;）使得代码更容易理解 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10、把一般代码和项目专有的代码分开。&lt;/p&gt;
&lt;p&gt;大部分代码都是一般代码。通过建立一大组&lt;code&gt;库和辅助函数&lt;/code&gt;来解决一般问题，剩下的只是让程序与众不同的核心部分。它使程序员关注小而定义良好的问题，这些问题已经同项目的其他部分脱离。对于这些子问题的解决方案倾向于更加完整和正确，也可以在以后重用它们。&lt;/p&gt;
&lt;p&gt;11、一个组织代码的简单技巧：一次只做一件事情。&lt;/p&gt;
&lt;p&gt;如果你有很难读的代码，尝试把它所做的所有任务列出来。其中一些任务可以很容易地变成单独的函数（或类）。其他的可以简单地成为一个函数中的逻辑“段落”。具体如何拆分这些任务没有它们已经分开这个事实那样重要。难的是要准确地描述你的程序所做的所有这些小事情 。&lt;/p&gt;
&lt;p&gt;12、一个简单的技巧：用自然语言描述程序然后用这个描述来帮助你写出更自然的代码。这个技巧出人意料地简单，但很强大。看到你在描述中所用的词和短语还可以帮助你发现哪些子问题可以拆分出来。&lt;/p&gt;
&lt;p&gt;但是这个“用自然语言说事情”的过程不仅可以用于写代码。例如，某个大学计算机实验室的规定声称当有学生需要别人帮它调试程序时，他首先要对房间角落的一只专用的泰迪熊解释他遇到的问题。令人惊讶的是，仅仅通过大声把问题描述出来，往往就能帮这个学生找到解决的办法。这个技巧叫做“&lt;code&gt;橡皮鸭技术&lt;/code&gt;”。&lt;/p&gt;
&lt;p&gt;另一个看待这个问题的角度是：如果你不能把问题说明白或者用词语来做设计，估计是缺少了什么东西或者什么东西缺少定义。把一个问题（或想法）变成语言真的可以让它更具体。&lt;/p&gt;
&lt;p&gt;13、写越少代码越好的。每行新的代码都需要测试、写文档和维护。另外，代码库中的代码越多，它就越“重”，而且在其上开发就越难。
通过以下方法避免编写新代码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从项目中消除不必要的功能，不要过度设计。&lt;/li&gt;
&lt;li&gt;重新考虑需求，解决版本最简单的问题，只要能完成工作就行。&lt;/li&gt;
&lt;li&gt;经常性地通读&lt;code&gt;标准库的整个API&lt;/code&gt;，保持对它们的熟悉程度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;14、在测试代码中，可读性仍然很重要。如果测试的可读性很好，其结果是它们也会变得很容易写，因此大家会写更多的测试。并且，如果你把事实代码设计得容易测试，代码的整个设计会变得更好。&lt;/p&gt;
&lt;p&gt;如何改进测试的几个具体要点（最重要的是，要使它易于改动和增加新的测试）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个测试的最高一层应该越简明越好。最好每个测试的输入/输出可以用一行代码来描述。&lt;/li&gt;
&lt;li&gt;如果测试失败了，它所发出的错误消息应该能让你&lt;code&gt;容易跟踪并修正这个bug&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用最简单的并且能够完整运用代码的测试输入。&lt;/li&gt;
&lt;li&gt;给测试函数取一个有完整描述性的名字，以使每个测试所测到的东西很明确。不要用&lt;code&gt;Test1（）&lt;/code&gt;，而用像&lt;code&gt;Test\_＜FunctionName＞\_＜Situation＞&lt;/code&gt;这样的名字。&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>2022年1月~2月陌生词汇</title>
      <link>https://anjanavakil.github.io/post/vocabulary_2022_1_2/</link>
      <pubDate>Mon, 28 Feb 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/vocabulary_2022_1_2/</guid>
      
        <description>&lt;p&gt;每个人的基础以及敏感偏好都不同。如果每次备考都背单词书的话，对我而言总是在重复会的单词，但不会的单词并不会得到太大的重视，因此记录下每天英文阅读（包括书籍、网站）时遇见的陌生单词，形成自己的单词书。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2022年1月2月陌生词汇&#34;&gt;2022年1月~2月陌生词汇：&lt;/h3&gt;
&lt;p&gt;i.e.词源是拉丁语 id est ，英文含义为that is/in other words（即/换而言之）。文章中可以直接读字母音i.e,全称可以按照意大利语的读音来读/id est/。&lt;/p&gt;
&lt;p&gt;e.g.拉丁语全称 exempli gratia，英文含义为for example/example given（举个例子）。文章中可以直接读字母音e.g,全称读音/ɪɡˈzemplɪ ˈɡrɑːtɪˌɑː/&lt;/p&gt;
&lt;p&gt;etc.拉丁语全称 et cetera，英文含义为and so on/and the rest of the things（等等）。文章中读音 /ˌet ˈsetərə; ˌɪt ˈsetərə/&lt;/p&gt;
&lt;p&gt;最后还有个小注意事项，英式英语中i.e.和e.g.后面不加逗号，而在美式英语中加逗号。&lt;/p&gt;
&lt;p&gt;dummy function 虚构函数 local function 局部函数&lt;/p&gt;
&lt;p&gt;Encapsulate Collection 封装集合&lt;/p&gt;
&lt;p&gt;Exclusive OR（XOR）&lt;/p&gt;
&lt;p&gt;explanatory figures 图示&lt;/p&gt;
&lt;p&gt;forward 转发&lt;/p&gt;
&lt;p&gt;full-duplex 全双工 half-duplex 半双工&lt;/p&gt;
&lt;p&gt;Hybrid Cloud 混合云&lt;/p&gt;
&lt;p&gt;just-in-time compilation 即时编译&lt;/p&gt;
&lt;p&gt;network hops 网络跳数&lt;/p&gt;
&lt;p&gt;placeholder 占位符&lt;/p&gt;
&lt;p&gt;polling 轮询&lt;/p&gt;
&lt;p&gt;refactor 重构&lt;/p&gt;
&lt;p&gt;router 路由器  tenant 租户&lt;/p&gt;
&lt;p&gt;throughput 吞吐量&lt;/p&gt;
&lt;p&gt;topology 拓扑结构&lt;/p&gt;
&lt;p&gt;web scraping 网路爬虫&lt;/p&gt;
&lt;p&gt;asynchronous 异步的&lt;/p&gt;
&lt;p&gt;caveat 注意事项=warning=caution pl. caveats&lt;/p&gt;
&lt;p&gt;handout (尤指发给学生或听报告的人的)讲义 pl. handouts&lt;/p&gt;
&lt;p&gt;blockquote n. 引用&lt;/p&gt;
&lt;p&gt;circumvent  v. &amp;lt;正式&amp;gt;规避，回避；（为避免某物而）改道，绕过；克服（问题，困难）（尤指暗中智取）&lt;/p&gt;
&lt;p&gt;tldr   abbr. 太长不读（too long; didn&amp;rsquo;t read）&lt;/p&gt;
&lt;p&gt;n. &amp;lt;非正式&amp;gt;（对文章、讨论的问题等的）要点总结，扼要概述（同TL;DR）&lt;/p&gt;
&lt;p&gt;under your belt 	已有的经验和阅历（俚语）在以往的经历中已经获得的成功（俚语）&lt;/p&gt;
&lt;p&gt;newbie  ( informal ) a person who is new and has little experience in doing sth, especially in using computers （尤指使用电脑的）新手 =novice&lt;/p&gt;
&lt;p&gt;menial adj. 卑微的；仆人的；适合仆人做的 n. 仆人；住家佣工；( usually disapproving ) ( of work 工作 ) not skilled or important, and often boring or badly paid 不需技巧的；枯燥的；报酬低的&lt;/p&gt;
&lt;p&gt;menial jobs/work 枯燥的工作 menial tasks like cleaning the floor 擦地板这种琐碎的工作&lt;/p&gt;
&lt;p&gt;gut feelings 直觉&lt;/p&gt;
&lt;p&gt;spreadsheet 电子表格程序&lt;/p&gt;
&lt;p&gt;trajectory n. （物体射向或抛向空中形成的）轨道，轨迹；（事业等的）发展轨迹，起落；&lt;/p&gt;
&lt;p&gt;signature piece 代表作&lt;/p&gt;
&lt;p&gt;regular article 正规论文 desk rejection 拒稿&lt;/p&gt;
&lt;p&gt;divergent adj. 不同的，分歧的；&lt;/p&gt;
&lt;p&gt;used bookstore 二手书店 used book 二手书&lt;/p&gt;
&lt;p&gt;insane adj. 疯癫的，精神失常的=crazy=irrational=angry=distracted&lt;/p&gt;
&lt;p&gt;merchandise n. 商品，货品；v. （用广告等方式）推销&lt;/p&gt;
&lt;p&gt;FOMO(fearing of missing out)&lt;/p&gt;
&lt;p&gt;exacerbate v. 使恶化，使加剧&lt;/p&gt;
&lt;p&gt;outskirt n. 郊区=suburb outskirts&lt;/p&gt;
&lt;p&gt;fine art=fine arts 美术&lt;/p&gt;
&lt;p&gt;Gone with the Wind 《飘》（电影、小说，也译作《乱世佳人》）&lt;/p&gt;
&lt;p&gt;Catcher in the Rye 《麦田里的守望者》&lt;/p&gt;
&lt;p&gt;The Grapes of Wrath 愤怒的葡萄（书名，电影名）&lt;/p&gt;
&lt;p&gt;wrath 英 [rɒθ] n. 愤怒，盛怒&lt;/p&gt;
&lt;p&gt;Remembrance of Things Past 《追忆似水年华》&lt;/p&gt;
&lt;p&gt;ambience n. 气氛，布景；周围环境&lt;/p&gt;
&lt;p&gt;ambiance n. 氛围，周围环境，格调；背景音（同ambience）&lt;/p&gt;
&lt;p&gt;Lenin 列宁&lt;/p&gt;
&lt;p&gt;introversion 内向 extroversion 外向&lt;/p&gt;
&lt;p&gt;shelf life 保存限期&lt;/p&gt;
&lt;p&gt;entrice v. 诱使，引诱&lt;/p&gt;
&lt;p&gt;proofread v. 校对，校阅&lt;/p&gt;
&lt;p&gt;volition  n. 意志，意志力；决断力&lt;/p&gt;
&lt;p&gt;newsletter n. （机构定期寄发给成员的）通讯，简报&lt;/p&gt;
&lt;p&gt;prowess n. 英勇；超凡技术；勇猛&lt;/p&gt;
&lt;p&gt;freelance adj. 特约的，自由职业（者）的adv. 以自由职业者身份n. 自由职业者；v. 做特约工作&lt;/p&gt;
&lt;p&gt;freelancer n. 自由职业者，特约人员&lt;/p&gt;
&lt;p&gt;deplorable adj. 令人震惊的；糟透的；应受到强烈谴责的；恶劣的，悲惨的&lt;/p&gt;
&lt;p&gt;dodge  v. 闪开，躲开；n. 逃避的诡计，骗人的伎俩；躲闪&lt;/p&gt;
&lt;p&gt;plummet  v. （数量、价值等）暴跌；（尤指从高处）坠落&lt;/p&gt;
&lt;p&gt;advertent adj. 留意的；注意的  advertently adv.&lt;/p&gt;
&lt;p&gt;inadvertent adj. 疏忽的；不注意的=unintentional  inadvertently adv.&lt;/p&gt;
&lt;p&gt;contentious adj. 有争议的，引起争论的；爱争论的，好争吵的&lt;/p&gt;
&lt;p&gt;disparity n. 明显差异&lt;/p&gt;
&lt;p&gt;hackathon n. 黑客马拉松&lt;/p&gt;
&lt;p&gt;adamant  adj. 固执的，坚强的；坚定不移的；坚硬无比的 n. 坚硬的东西；坚石&lt;/p&gt;
&lt;p&gt;bustle v. 奔忙，匆忙地走；繁忙，热闹；n. 喧闹，繁忙；&lt;/p&gt;
&lt;p&gt;bustling adj. 熙熙攘攘的，忙乱的&lt;/p&gt;
&lt;p&gt;walkthrough n. 预排，预排工作  code walkthrough 代码走读&lt;/p&gt;
&lt;p&gt;plagiarism n. 剽窃，抄袭；剽窃作品&lt;/p&gt;
&lt;p&gt;impeccable  adj. 无瑕疵的，没有缺点的&lt;/p&gt;
&lt;p&gt;perk n. （工资以外的）额外收入，津贴；特殊待遇，好处；v. 振作起来，活跃起来（perk (sb./sth.) up）；&lt;/p&gt;
&lt;p&gt;peruse vt. 详细考察；精读&lt;/p&gt;
&lt;p&gt;brush up 复习；提高；擦光&lt;/p&gt;
&lt;p&gt;vt 1. to improve or polish as if by brushing.   2. to renew one’s skill in: brush up your Spanish&lt;/p&gt;
&lt;p&gt;vi 1. to refresh one’s memory renew one’s skill: brush up on grammar/mathematics&lt;/p&gt;
&lt;p&gt;glossary n. 词汇表，术语表；&lt;/p&gt;
&lt;p&gt;procrastinate v. 拖延，耽搁  procrastination. n. 耽搁，拖延；拖延症&lt;/p&gt;
&lt;p&gt;tenacity n. 顽强，执着，坚持；黏性&lt;/p&gt;
&lt;p&gt;relent  v. 变宽容，变温和；终于同意，不再反对；（天气）转晴，缓和，转好；v. 再借（relend 的过去式和过去分词）&lt;/p&gt;
&lt;p&gt;relentless adj. 坚韧的，不屈不挠的；残酷无情的，不留情面的；不停的，不间断的&lt;/p&gt;
&lt;p&gt;relentlessly adv. 残酷地，无情地&lt;/p&gt;
&lt;p&gt;troubleshoot  v. 解决重大问题；排除……的故障&lt;/p&gt;
&lt;p&gt;tact n. 得体，乖巧，机敏；鉴赏力  tactful 圆通的；得体的；不得罪人的&lt;/p&gt;
&lt;p&gt;poise n. 沉着，镇定；（优雅的）体态，姿态；v. （使）平衡，（使）悬浮；准备做……（be poised）&lt;/p&gt;
&lt;p&gt;poised adj. 镇定的，自信的；摆好姿势的；做好准备的；&lt;/p&gt;
&lt;p&gt;level-headed adj. 冷静的；清醒的&lt;/p&gt;
&lt;p&gt;demeanor n. 风度；举止；行为&lt;/p&gt;
&lt;p&gt;concoct vt. 编造；调制（食物或饮品） concoction n. 混合；调合；调合物&lt;/p&gt;
&lt;p&gt;hyperbole n. 夸张（法）&lt;/p&gt;
&lt;p&gt;potent adj. 强大的，有力的；&lt;/p&gt;
&lt;p&gt;intonation n. 声调，语调；吟咏，吟诵；&lt;/p&gt;
&lt;p&gt;trendsetter n. 领导流行的人；创新风者&lt;/p&gt;
&lt;p&gt;foolproof adj. 不会出毛病的，万无一失的&lt;/p&gt;
&lt;p&gt;personable adj. 品貌兼优的；英俊潇洒的；和蔼可亲的&lt;/p&gt;
&lt;p&gt;potluck n. 家常便饭；百乐餐（每人自带一个菜的家庭聚会）&lt;/p&gt;
&lt;p&gt;from scratch 从零开始&lt;/p&gt;
&lt;p&gt;astray adv. 迷失，迷路；步入歧途，堕落&lt;/p&gt;
&lt;p&gt;fidelity n. （对配偶或伴侣的）忠贞；(对人、组织或信仰的）忠诚；精确性；&lt;/p&gt;
&lt;p&gt;jeopardy n. 危险，风险；&lt;/p&gt;
&lt;p&gt;vigil n. 守夜；监视；不眠；警戒&lt;/p&gt;
&lt;p&gt;vigilant adj. 警觉的，警惕的  vigilance n. 警戒，警觉；失眠症&lt;/p&gt;
&lt;p&gt;search engine optimization (SEO)  abbr. 搜索引擎优化&lt;/p&gt;
&lt;p&gt;adage n. 格言，谚语&lt;/p&gt;
&lt;p&gt;candid adj. 坦率的，直言不讳的=frank=forthright=blunt；抓拍的，偷拍的；公正的&lt;/p&gt;
&lt;p&gt;noxious adj. 有害的；有毒的；败坏道德的；讨厌的&lt;/p&gt;
&lt;p&gt;obnoxious adj. 可憎的，粗鲁无礼的&lt;/p&gt;
&lt;p&gt;goofy adj. 傻瓜的，愚笨的=silly&lt;/p&gt;
&lt;p&gt;prank n. 恶作剧，开玩笑；戏谑 v. 装饰；胡闹&lt;/p&gt;
&lt;p&gt;deprecate v. 反对；抨击；轻视；声明不赞成&lt;/p&gt;
&lt;p&gt;lnc.是英文单词“incorporated”（注册成立）的缩写，该词在美国以法人公司的形式组织成立的公司名称后所使用。&lt;/p&gt;
&lt;p&gt;daunt v. 使胆怯，使气馁；威吓  dauntless adj. 无畏的；勇敢的；不屈不挠的&lt;/p&gt;
&lt;p&gt;daunting adj. 使人畏惧的，使人气馁的  dauntingly adv. 令人生畏地；吓人地&lt;/p&gt;
&lt;p&gt;sought-after adj. 受欢迎的，很吃香的&lt;/p&gt;
&lt;p&gt;omni n. 全方位；泛光灯pref. 表示“总”；表示“遍”&lt;/p&gt;
&lt;p&gt;omnipotent adj. 全能的，无所不能的 omnipresent adj. 无所不在的&lt;/p&gt;
&lt;p&gt;fainthearted adj. 懦弱的，胆小的&lt;/p&gt;
&lt;p&gt;faintheart n. 懦夫，怕事人；无决断力的人 adj. 懦弱的；无决断的&lt;/p&gt;
&lt;p&gt;revel vi. 狂欢；陶醉n. 狂欢；闹饮；pl.revels&lt;/p&gt;
&lt;p&gt;ridicule n. 嘲笑，奚落v. 嘲笑，奚落  ridiculous adj. 可笑的，荒谬的&lt;/p&gt;
&lt;p&gt;revile v. 辱骂；斥责&lt;/p&gt;
&lt;p&gt;eptitude n. 有效性；合适；能力&lt;/p&gt;
&lt;p&gt;inept adj. 笨拙的；不适当的 ineptly adv.不适当地；无能地&lt;/p&gt;
&lt;p&gt;ineptitude n. 不适当，不合适；不称职；愚笨；&lt;/p&gt;
&lt;p&gt;preceptor: a teacher or instructor&lt;/p&gt;
&lt;p&gt;covet v. 贪求，觊觎  coveted adj. 垂涎的；梦寐以求的&lt;/p&gt;
&lt;p&gt;covetous adj. 贪婪的；贪求的；渴望的 covetousness n. 贪婪；贪心&lt;/p&gt;
&lt;p&gt;fret v. 烦恼，发愁；&lt;/p&gt;
&lt;p&gt;purge v. 清洗；清除  purgeable 可净化的；可清除的&lt;/p&gt;
&lt;p&gt;discord n. 意见分歧，不和；不和谐音，不协和弦v. &amp;lt;古&amp;gt;（人）有不同意见；（事物）不一致，不协调&lt;/p&gt;
&lt;p&gt;beget vt. 产生；招致；引起；当……的父亲&lt;/p&gt;
&lt;p&gt;Quantitative change begets qualitative change. 量变产生质变&lt;/p&gt;
&lt;p&gt;press briefing 新闻发布会  a press briefing&lt;/p&gt;
&lt;p&gt;evacuate v. （把人从危险的地方）疏散，撤离；（从危险的地方）搬出，撤空；&lt;/p&gt;
&lt;p&gt;evacuation n. 撤离，疏散；（粪便等的）排泄；排空，清除&lt;/p&gt;
&lt;p&gt;potter n. 陶艺家，制陶工人vt. 闲混，虚度vi. 闲逛；慢条斯理地做事&lt;/p&gt;
&lt;p&gt;circus n. 马戏团，马戏演员；马戏表演；&lt;/p&gt;
&lt;p&gt;shoddy adj. 劣质的，粗制滥造的；卑鄙的，不正当的&lt;/p&gt;
&lt;p&gt;domino n. 多米诺骨牌；面具；&lt;/p&gt;
&lt;p&gt;pertinent  adj. 切题的，相关的 pertinence n. 针对性；有关性，相关性&lt;/p&gt;
&lt;p&gt;allot v. 分配，分派，划拨&lt;/p&gt;
&lt;p&gt;allotted adj. 专款的；拨出的v. 分配；指派；拨给（allot 的过去分词）&lt;/p&gt;
&lt;p&gt;vacancy n. 空缺，空职；（旅馆等的）空房，空间；无知，空虚；空隙，空处&lt;/p&gt;
&lt;p&gt;vacant   adj. （地方）空着的，无人用的；（职位，工作）空缺的；茫然的，失神的&lt;/p&gt;
&lt;p&gt;entrust v. 委托，交托&lt;/p&gt;
&lt;p&gt;true form 原码 complement 补码 radix-minus-one complement 反码&lt;/p&gt;
&lt;p&gt;directed number 有符号数&lt;/p&gt;
&lt;p&gt;summator  加法电路，加法器&lt;/p&gt;
&lt;p&gt;phantom&lt;/p&gt;
&lt;p&gt;n. 幽灵，鬼魂；幻觉，幻象；渺茫；为诈骗而捏造的财务安排（或金融交易）&lt;/p&gt;
&lt;p&gt;adj. 虚幻的，幻觉的；有名无实的，虚假骗人的；像鬼的，幽灵似的；（尤指罪犯）身份不明的&lt;/p&gt;
&lt;p&gt;scavenge vt. 以……为食；打扫；排除废气 vi. 清除污物；打扫&lt;/p&gt;
&lt;p&gt;scavenger n. 食腐动物；清道夫；[助剂] 清除剂；拾荒者&lt;/p&gt;
&lt;p&gt;tuple n. [计] 元组&lt;/p&gt;
&lt;p&gt;primitive type 基本类型&lt;/p&gt;
&lt;p&gt;surrogate  adj. 替代的，代理的 n. 代理人，替代者；v. 取代，替代；&lt;/p&gt;
&lt;p&gt;immutable adj.永恒的，不可改变的&lt;/p&gt;
&lt;p&gt;retard v. &amp;lt;正式&amp;gt;阻碍，减缓；减慢，受到阻滞n. &amp;lt;非正式&amp;gt;弱智，笨蛋；延迟，阻止&lt;/p&gt;
&lt;p&gt;primeval=primaeval  英  [praɪˈmiːvl] 美  [praɪˈmiːvl]&lt;/p&gt;
&lt;p&gt;1、原始的=ancient   e.g.primeval forest&lt;/p&gt;
&lt;p&gt;2、本能的=instinctive&lt;/p&gt;
&lt;p&gt;boa constrictor 蟒蛇&lt;/p&gt;
&lt;p&gt;necktie 领带  sailor=seaman海员&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《世界因你不同：李开复自传》</title>
      <link>https://anjanavakil.github.io/post/the_kai_fulee_story/</link>
      <pubDate>Thu, 10 Feb 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the_kai_fulee_story/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/4010196/&#34;&gt;《世界因你不同：李开复自传》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回家路上😷+在家床上🤣看完的一本自传。&lt;/p&gt;
&lt;p&gt;1、前面读到李开复在上学时期的调皮捣蛋，记得自己当时差点在飞机上笑出声来，可见作者叙事能力挺强的，的确可以将故事描述的生动幽默。&lt;/p&gt;
&lt;p&gt;2、作者叙事的客观：传记对客观叙述的要求更高，但作为人，看待事物和叙事都是有主观因素的。不过作者已经尽自己所能客观叙述，比如中美的不同教育方式、大学申请、创新和实际应用于用户等等。&lt;/p&gt;
&lt;p&gt;3、读到后面，感觉作者的文笔还是稍逊，欠缺人文方面的东西。尽管作者深陷Microsoft和Google的诉讼官司，但没给自己太大的感受（不知道是不是在床上阅读的问题😬）。&lt;/p&gt;
&lt;p&gt;Anyway, 传记类书籍看得太少，继续加油喽。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《影响商业的50本书》</title>
      <link>https://anjanavakil.github.io/post/50_business_must_reads/</link>
      <pubDate>Thu, 10 Feb 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/50_business_must_reads/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/35047171/&#34;&gt;《影响商业的50本书》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;算是作者对商业书籍的书评汇总起来的解说式的书籍，收获颇丰。&lt;/p&gt;
&lt;p&gt;1、对一些事物不同维度和方向的思考：作为金融商业领域的小白，作者对于每本书的解说分析，可以带来启发式的思考，就已经足够厉害。独立思考与深入思考正是自己所欠缺、需要耐心培养的能力。&lt;/p&gt;
&lt;p&gt;2、从吴晓波的文字中，可以看到理性的述说，感性的评论。推荐的书籍自己读过寥寥几本，很多知识都在自己的专业知识范畴之外，但是作者加入了一些叙述性的有趣故事，再加上细腻的文笔，整本书读起来也不枯燥，反而有点喜欢，有种奇怪的知识又增加了的感觉。&lt;/p&gt;
&lt;p&gt;以后读了这本书中的经典书籍后再回过头来看作者的分析，应该会有更深入的理解。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>关于阅读</title>
      <link>https://anjanavakil.github.io/post/read_summary_2022/</link>
      <pubDate>Tue, 01 Feb 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/read_summary_2022/</guid>
      
        <description>&lt;p&gt;一直觉得阅读也只不过是排解人生无聊的陪伴，不太喜欢阅读如何如何好之类的说辞，但是有次在微读看到有书友这样写：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;读书和思考是一件辛苦的事，像暗夜里踽踽独行的路人，没人帮衬，也没有同伴。&lt;/p&gt;
&lt;p&gt;小到大生活的环境，固定的思维模式，熟络的人际关系，日复一日养成地习惯，还有你不愿意颠覆的理所当然。&lt;/p&gt;
&lt;p&gt;等到有一天，你看了一本书，它把这个坚固堡垒敲碎了一个角，有光透进来，然后你看到了外面的世界。&lt;/p&gt;
&lt;p&gt;每一本让你思考，给你感触，逼你反刍的书，都是敲破堡垒的利器，它让你知道什么是新奇广博，什么是学海无涯。&lt;/p&gt;
&lt;p&gt;有些书看完会心一笑，有些书看完暗自心惊，不管笑还是惊，它们都慢且坚定地带你远离无知，走近更广袤的世界。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;记录下我22岁之前的阅读之路。&lt;/p&gt;
&lt;p&gt;高考之前的课外书都是小说居多：&lt;/p&gt;
&lt;p&gt;《三体》《活着》《简·爱》《挪威的森林》《红楼梦》《白夜行》《嫌疑人X的献身》《解忧杂货店》《追风筝的人》《偷影子的人》《傲慢与偏见》《百年孤独》《目送》《亲爱的安德烈》《暮光之城》《穆斯林的葬礼》······都是高一高二抽时间看的。&lt;/p&gt;
&lt;p&gt;大一上也有看小说：&lt;/p&gt;
&lt;p&gt;《房思琪的初恋乐园》，三毛的大部分书（《撒哈拉的故事》《梦里花落知多少》《雨季不再来》《万水千山走遍》等等）《恶意》《当我谈跑步时我谈些什么》《许三观卖血记》《平凡的世界》《我们仨》《基督山伯爵》《白鹿原》《情书》······&lt;/p&gt;
&lt;p&gt;后来基本两年的时间都花在了专业知识上：&lt;/p&gt;
&lt;p&gt;机器学习、深度学习、数据挖掘、Java各种框架，但可惜并不是通过阅读的方式学习，而是通过视频、博客等，虽说是计算机专业敲代码很重要，可后来发现书中的知识更加系统也更经得住考验，更加值得为之抓耳挠腮，会知其然的同时知其所以然。&lt;/p&gt;
&lt;p&gt;两年时间没有好好阅读，其实自己也慢慢发现自己的问题了，没有那份好奇心和求知心，一直在绕着专业知识打转，可惜也没有学多精通。&lt;/p&gt;
&lt;p&gt;大三上因为迷茫开始重新阅读：&lt;/p&gt;
&lt;p&gt;从心理学开始读起，阅读题材开始更加广泛，什么都读，小说倒是读的很少很少了（临近毕业尽管告诉自己要慢慢来但真的没有静下心来读小说的那份宁静了），专业知识也渐渐通过读书学习。渐渐开始写书评，渐渐有了这个属于自己的小空间。&lt;/p&gt;
&lt;p&gt;通过阅读，看见了更广阔的世界，知道如何与自己和解，如何慢慢不再与别人比较，对原生家庭有了更多的理解。有些看起来都是对世俗前途无用的事情，可我越发觉得人活一世的意义就在此吧。&lt;/p&gt;
&lt;p&gt;低谷的时候是阅读一直在陪伴着我，希望一直阅读，一直进步，一直成长在路上。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《当下的力量》</title>
      <link>https://anjanavakil.github.io/post/the_power_of_now/</link>
      <pubDate>Wed, 19 Jan 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the_power_of_now/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/24758481/&#34;&gt;《当下的力量》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2021年10月份开始阅读，只读了1/3，2022年1月9日书友推荐，很快就接着读完了。一直拖着没写书评，正好是隔离DAY 2，就想着复习《当下的力量》这本书，完成书评。&lt;/p&gt;
&lt;p&gt;重新读完整本书，还是有很大收获：&lt;/p&gt;
&lt;p&gt;1、对大脑思维的觉知：之前很少反思自己的思维会错，但是这本书告诉大脑的思维是有误的。&lt;/p&gt;
&lt;p&gt;当下所产生的痛苦是源自对现状某种形式的不接受、某种形式的无意识抗拒。从思维的层面来说，这种抗拒以批判的形式存在；从情绪的层面来说，它又以负面情绪的形式显现。痛苦的程度取决于对当下的抗拒程度以及对思维的认同程度。思维通常否认当下，并试图逃离当下。是我们的大脑在思考我们的过去，担忧我们的未来。&lt;/p&gt;
&lt;p&gt;为了从思维中解放出来，我们需要变成思维和行为的沉默的观察者，尤其是观察思维的重复模式和小我所扮演的角色。&lt;/p&gt;
&lt;p&gt;2、“钟表时间”与“心理时间”：“钟表时间”，将注意力集中在当下并利用当下时间；“心理时间”，认同过去，并且持续地、强迫性地投射到未来。&lt;/p&gt;
&lt;p&gt;在过去犯了错误并且现在汲取了教训，利用的就是钟表时间。如果在心理上不断地回忆过去的错误，进行自我批评或感觉悔恨，错误将融入了“我”以及“我的”之中，就变成了心理时间。我们应该保持警惕，这样就不会在不自觉的情况下，将钟表时间转变成心理时间。&lt;/p&gt;
&lt;p&gt;3、对压力和对未来设想的重新看待：压力的产生是由于我们在“这里”却想到“那里”去，或我们在当下却想去未来，这是一种让内在分裂的方式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;等待是一种思维状态，意味着你需要未来，而不要现在；你不要你所拥有的，而要你所没有的。任何一种形式的等待，都让你无意识地在你的此时此刻创造了一种内心的冲突：你不要此时此刻，你把希望寄托于未来。丧失对当下时刻的意识，会大大降低你的生命质量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;4、对痛苦难受的应对：如果不能接受外在的状况，那么就接受内心状况。不要去抗拒痛苦，允许它的存在。向悲伤、绝望、恐惧、孤单或者任何形式的痛苦臣服。在不贴心理标签的情况下去观察它，拥抱它。然后，观察臣服的奇迹是如何将深深的痛苦转化为深深的宁静的。这是磨难，但也是复活和提升的契机。&lt;/p&gt;
&lt;p&gt;庆幸的是，自己10月份读了这本书的一部分，后来真的有慢慢实践。看到之前备忘录中自我鼓励的话：&lt;/p&gt;
&lt;p&gt;“害怕未来有用吗？你现在当下此时此刻能抓住的只有一直在向前走的每分每秒，未来的事留给未来，只做好当下该做的事！换一种思维，这种有挑战的事不应该是自己追求的吗？正是难才让过程更加有意思。一切都会随之飘去，有什么是一成不变的呢？现在很难受是吗？焦虑无法放松，那就与你的难受共存，把当下的难受当作你必须前进成长的负担，负重前行，总会一步步走过去的。”&lt;/p&gt;
&lt;p&gt;读书，更多地觉知到自己的行为和思维。当下时刻是所能拥有的一切。从来没有一刻生命是不在当下的。&lt;/p&gt;
&lt;p&gt;当痛苦的时候读读灵修类的心灵读物，也不失为从泥淖中快速走出来的方法之一。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>CS基础知识书籍推荐(已读)</title>
      <link>https://anjanavakil.github.io/post/cs_book_recommendation/</link>
      <pubDate>Sat, 15 Jan 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/cs_book_recommendation/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;豆瓣🔗：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/4822685/&#34;&gt;《编码：隐匿在计算机软硬件背后的语言》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/1494026/&#34;&gt;&lt;em&gt;Code: The Hidden Language of Computer Hardware and Software&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/26397183/&#34;&gt;《计算机是怎样跑起来的》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/26365491/&#34;&gt;《程序是怎样跑起来的》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/26941639/&#34;&gt;《网络是怎样连接的》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/26600183/&#34;&gt;《计算机系统基础》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/26912767/&#34;&gt;《深入理解计算机系统》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好的专业书籍可以帮助读者透过现象看本质，将复杂的事物简单化。&lt;/p&gt;
&lt;p&gt;2021年才开始真正阅读，前半年通过&lt;/p&gt;
&lt;p&gt;1、阅读微读的&lt;code&gt;《编码：隐匿在计算机软硬件背后的语言》&lt;/code&gt; &lt;code&gt;《计算机是怎样跑起来的》&lt;/code&gt; &lt;code&gt;《程序是怎样跑起来的》&lt;/code&gt; &lt;code&gt;《网络是怎样连接的》&lt;/code&gt;：都是入门级别的书籍，通过书籍可以系统的思考，为之后的学习打下了较好的基础。&lt;/p&gt;
&lt;p&gt;2、学习&lt;code&gt;南大袁春风老师&lt;/code&gt;的“&lt;code&gt;计算机系统基础&lt;/code&gt;”课程和阅读她的书&lt;code&gt;《计算机系统基础》&lt;/code&gt;：当时这门课对自己真的是醍醐灌顶，课程有很多干货，PPT详细，老师的讲授又有很多新知识，感觉打通了自己对计算机底层认识的任督二脉。还记得当时听完这门课很激动的给朋友疯狂推荐。&lt;/p&gt;
&lt;p&gt;3、学习&lt;code&gt;CMU 15-213&lt;/code&gt;和阅读&lt;code&gt;CSAPP&lt;/code&gt;纸质书：CSAPP刚开始对自己来说阅读真的很艰难，一两个小时也看不了多少页，还得在早晨注意力非常集中的时间阅读，但正是难才让自己转动大脑思考，才有挑战有意思。很多事情做起来没有想象的难，后面也该慢慢过渡到大黑书的阅读中去了。
大概就是这循序渐进的学习对计算机底层有了很多的认识，也不再那么惧怕硬件底层的东西了，反而感觉这才是知识啊（还记得当时慨叹于&lt;code&gt;IEEE 754&lt;/code&gt;浮点数算术标准设计的精妙，二进制世界的奇妙），基础的东西历久弥新。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《沉思录》</title>
      <link>https://anjanavakil.github.io/post/meditations/</link>
      <pubDate>Sat, 15 Jan 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/meditations/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/2359003/&#34;&gt;《沉思录》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;古罗马皇帝&lt;code&gt;马可·奥勒留&lt;/code&gt;，执掌大权几十年。他不断写下与自己心灵的对话，写进名为“致我自己”的日记。他死后，这本日记出版，从而著就了永悬后世的《沉思录》，成为&lt;code&gt;斯多葛学派&lt;/code&gt;的经典。
的确是适合放在床头，睡前随手翻的一本好书，常看常新。&lt;/p&gt;
&lt;p&gt;读一些书渐渐明白：世间事物的好坏都是取决于人主观的想法，事情本身并无好坏。是我们个人的价值判断，产生了喜怒哀乐。就像&lt;code&gt;《被讨厌的勇气》&lt;/code&gt;中讲到的&lt;code&gt;阿德勒&lt;/code&gt;的观点，假如世界上只有自己一个人，又怎么会有痛苦和所谓世俗的好坏呢？&lt;/p&gt;
&lt;p&gt;许多时候，某种行为带给我们的愤怒与烦恼要比带给我们愤怒与烦恼的行为本身，痛苦更多一些。当极度焦急或悲伤时，想一下：人的生命只是一瞬，在极短时间之后，我们都将归于死亡。&lt;/p&gt;
&lt;p&gt;终究是要在大环境中成长，去阅读去思考去实践。 努力而得，是幸运；努力而不得，是人生常态。`爱我们所爱，但我们所爱的都如朝露。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To treat life, you might as well be bold, because we have to lose it all the time.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>《运动改造大脑》</title>
      <link>https://anjanavakil.github.io/post/the_revolutionary_new_science_of_exercise_and_the_brain/</link>
      <pubDate>Thu, 13 Jan 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the_revolutionary_new_science_of_exercise_and_the_brain/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/25755874/&#34;&gt;《运动改造大脑》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Wendy Suzuki: The brain-changing benefits of exercise | TED&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TED🔗：&lt;a href=&#34;https://www.ted.com/talks/wendy_suzuki_the_brain_changing_benefits_of_exercise&#34;&gt;wendy_suzuki_the_brain_changing_benefits_of_exercise&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;YouTube🔗: &lt;a href=&#34;https://www.youtube.com/watch?v=BHY0FxzoKZE&#34;&gt;Wendy Suzuki: The brain-changing benefits of exercise | TED&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;bilibili🔗: &lt;a href=&#34;https://www.bilibili.com/video/BV1gE411Q7QA/?spm_id_from=333.788.recommend_more_video.0&#34;&gt;【双语 | TED演讲】去运动吧，这是你对大脑最好的投资！&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2021.9.4阅读。&lt;/p&gt;
&lt;p&gt;自己压力大没精神时，去跑个步上个单车课，整个人就像电脑重启一样，又活力满满。&lt;/p&gt;
&lt;p&gt;2021年从2月到12月，坚持运动了11个月。这次运动应该是上大学以来坚持最久的运动，但运动量一点都不大，佛系运动吧，只是坚持了。&lt;/p&gt;
&lt;p&gt;自己运动的初衷只是希望自己不要感冒耽误事情，不想再像高考复习那样一个月感冒一次，每次还持续两周时间，过去一年自从运动没有感冒也算是达到自己的初衷了。后来通过阅读一些书知道：强健肌肉和增强心肺只是运动最基本的作用，运动最关键的作用是强健或改善大脑。适度的运动，会提高人的专注力、记忆力、思考能力、工作执行能力等多种脑机能。运动可以改善日常情绪、减轻焦虑、预防抑郁等。&lt;/p&gt;
&lt;p&gt;还记得有段时间把&lt;code&gt;TED&lt;/code&gt;的&lt;code&gt;Wendy Suzuki&lt;/code&gt;关于运动的一篇演讲“去运动吧，这是你对大脑最好的投资！”听了很多遍还在纸上听写了一遍。不仅为了鼓励自己养成坚持运动的习惯，还希望遇到难的事情时对自己有信心，告诉自己比过去更专注了。&lt;/p&gt;
&lt;p&gt;其实大部分时候压力大的时候不得不通过运动解压。反而是最近比较松懈，有半个月没运动了。休息的时间够长了，是时候重新开始坚持运动了，毕竟前路漫漫，前方的任何时候都不会容易。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《深度工作：如何有效使用每一点脑力》</title>
      <link>https://anjanavakil.github.io/post/deep_work_rules/</link>
      <pubDate>Mon, 10 Jan 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/deep_work_rules/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;豆瓣🔗：&lt;a href=&#34;https://book.douban.com/subject/27056409/&#34;&gt;《深度工作：如何有效使用每一点脑力》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为知道手机对注意力极其有害，所以备考期间就会尽量要求自己只在吃饭、晚上的时间看手机，当时大部分时间都做到了。可是考试一结束又开始一两个小时就看一次手机，无聊地刷一下各种软件。然后就想着休息期间看一下好像也没什么，当作是放松，再集中注意力做事就好了。但今天回顾看过的这本《深度工作：如何有效使用每一点脑力》，发现自己真是大错特错。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;越来越多的科学家认为刻意练习有效的原因与髓磷脂相关，它是在神经元周围生长的一层脂肪组织，起到绝缘保护的作用，可保持神经元干净和正常运转。要理解髓磷脂在提升能力方面的作用，首先要记住，不管是智力还是体力方面的技能，最终都要追溯到大脑回路上。这种新的性能科学认为，如果相关神经元周围汇集了更多的髓磷脂，相应的大脑回路就能更轻松有效地运转，你在某方面的技能就会更强。想要在某方面有了不起的成就，就需要有更多髓磷脂的协助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;专注于某一项特定技能，就会迫使某一特定大脑回路在隔离的区域不断地燃烧。反复利用同一大脑回路，就能促使少突细胞在这个回路的神经元周围包裹髓磷脂，从而有效地固化这种技能。因此，要想高度专注于当前任务，避免干扰非常重要，因为这是充分隔离相关神经回路、促进髓磷脂鞘形成的唯一途径。与之相对，如果你尝试在注意力涣散的情况下（或许脸谱网的推送消息还开着）学习一种复杂的新技能（比如SQL数据库管理），就会有太多的回路同时进行，你真正希望强化的神经元群只能得到偶尔的隔离。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可见在网上不断地切换注意力会对大脑产生长久的负面影响。计算机科学家&lt;code&gt;唐纳德·克努特（Donald Knuth）&lt;/code&gt;很关注深度工作，他在个人网站上写道：“我所做的事情需要长时间的学习和无人干扰的高度专注。”&lt;/p&gt;
&lt;p&gt;好在昨天终于勇敢说出了自己想说的，也得到了答案，结果应该是让人痛苦的吧，但突然又很释然，一切都放下了。从昨天晚上到今天不再时时看手机了，可以专心于当下的事。果然痛苦使人进步，是应该走出自己的&lt;code&gt;comfort zone&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;对我来说最有挑战但持怀疑态度的一点是“&lt;code&gt;拥抱无聊&lt;/code&gt;”，已经习惯了在排队等候的时候习惯性的打开一个个APP，但作者提出这其实也是有害的。作者提到一旦大脑习惯了随时分心，即使在想要专注的时候，也很难摆脱这种积习。如果生活中潜在的每一刻无聊时光：排队等5分钟或者是在餐厅坐等朋友，都是浏览智能手机来打发，那么大脑就可能已经被重新编排，从某种程度上说，就像是“心智残疾”。之前很忙的时候，总是没有时间做一些肤浅工作，比如完成每日“学习强国”的任务、回复父母朋友的消息，我一般都会在吃饭的时候完成这些必须做但不需要集中注意力的工作。读书的过程应该保留自己的看法，同时认识作者的想法，希望以后会找到属于自己的这一问题的答案。&lt;/p&gt;
&lt;p&gt;但说实话自己的专注还没有达到本该达到的50%，比如刷Leetcode、被bug折磨时就会习惯性的打开知乎 、bilibili、YouTube。既然意识到自己的注意力不集中，就应该慢慢做出改变，任何事情只要去做就不迟。时刻提醒自己专注，坐到书桌前就专注。追求心流之后带来的体验，慢慢控制自己的大脑思维，做出抵抗外界干扰和控制注意力的斗争就会发现获得极大的愉悦感。以后工作的话也应该挑战自己，少做&lt;code&gt;Shallow Work&lt;/code&gt;，多做&lt;code&gt;Deep Work&lt;/code&gt;。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>《资本论》马克思</title>
      <link>https://anjanavakil.github.io/post/das_kapital/</link>
      <pubDate>Fri, 07 Jan 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/das_kapital/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;豆瓣🔗：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/30316487/&#34;&gt;《资本论》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/35513002/&#34;&gt;《用得上的资本论：当代社会人生存指南》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/25804908/&#34;&gt;《一篇读罢头飞雪，重读马克思》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/20424526/&#34;&gt;《邓小平时代》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;资本论&#34;&gt;《资本论》&lt;/h3&gt;
&lt;p&gt;作为经典的《资本论》，可惜自己的认知阅历很多地方都看不懂，可还是有所收获。&lt;/p&gt;
&lt;p&gt;1、对马哲政治经济学一些概念有进一步的理解。之前自己在网络上总是看到声讨资本主义的内容，广为人知的“996”，但那时候的自己对此完全没有概念。大学学习马哲的时候只是想着我是计算机专业的，这些文科类的知识对自己没用，所以纵容自己上课不听，课下也不会真正花时间了解。真正学习了解后才知道知识的魅力。&lt;/p&gt;
&lt;p&gt;这本译本的好处之一就是，文字中加入了照片图片画作等，有彩色有黑白，通过视觉有助于我这样的政经小白理解，了解过去的资本主义及其剥削和过去的历史面貌。&lt;/p&gt;
&lt;p&gt;2、开始慢慢关注新闻，除了高中强制性的每晚30min的新闻联播，以前的自己是从不看新闻的。慢慢对新闻时事感兴趣，开始看bilibili观察者网的新闻（刚开始关注了观察者网的账号，但是动态实在有点多，一天就有好几条。自身的原因不是很喜欢总是被打扰，如果我每次看到动态就去看那条新闻，估计是很难专注于自己的事。于是就取关了想看新闻的时候直接搜索看看最近的时事）。&lt;/p&gt;
&lt;p&gt;3、发现当下的自己还是功利性的阅读。这本《资本论》只读了对自己有帮助的66%，接下来的一段时间应该是难以全部读完了。不过经典永不过时，后面有疑惑时重新阅读。&lt;/p&gt;
&lt;p&gt;理论始终是要与实践结合的。以为自己读了一点点书后自己的价值体系在慢慢生长，可以不恐惧不焦虑，慢慢来，抓住大学最后难得的读书时间。可就是静不下心来，一旦看的书不是专业书籍或者对自己的当下没有帮助的书，就完全无法沉浸进去看书，整个人好像完全处于漂浮的状态，没有全神贯注的心流。以为自己可以坦然面对，可当世俗的压力袭来时，自己还是会手忙脚乱无力应对。所以将书中的知识真正应用才是真的吸收了书中的智慧，一遍遍告诉自己慢慢来。值得庆幸的是：读书真的可以让自己慢下来。&lt;/p&gt;
&lt;h3 id=&#34;用得上的资本论当代社会人生活指南&#34;&gt;《用得上的资本论：当代社会人生活指南》&lt;/h3&gt;
&lt;p&gt;读不懂马克思写的《资本论》，而《用得上的资本论：当代社会人生活指南》阅读和理解都比较容易。作者借助社会热点，从当代社会生活解说了资本主义，对于想要初步了解资本主义真面目还是很有帮助的，推荐。&lt;/p&gt;
&lt;p&gt;这本书只能说对于当时的我是有价值的，自己认知有限，况且还没有正式进入社会工作。当时读完这本书的确是产生了对工作的恐惧，尤其&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;企业并不关心员工自己有什么理想，只关心员工能不能实现企业的理想（本书作者）&lt;/p&gt;
&lt;p&gt;资本增殖的价值来自于劳动者，但是资本增殖的收益却归属于资本家”（本书作者）&lt;/p&gt;
&lt;p&gt;总体工人从而资本在社会生产力上的富有，是以工人在个人生产力上的贫乏为条件的（马克思）&lt;/p&gt;
&lt;p&gt;于是大家在工作和生活中根本不需要全面运用自身的智力，也不会增长其他领域的见识。在本职工作上的敏锐与博学，只会换来在其他领域的迟钝和无知（本书作者）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;读了很少的历史，看了毛泽东、邓小平的传记（但还没全部读完），对当时所做的事产生了怀疑。读伟人的故事伟人的传记，对自身的人生追求人生价值的确产生了很大影响，朦朦胧胧好像有自己的想法了，因为从小到大就是按部就班上初中高中大学，自己如同没有思想的人，被时间裹挟着前进。2021上半年笃信不疑的事情到了下半年就觉得可有可无、可做可不做了。可当时的自己根本就没有大量时间阅读寻找答案，原来的价值体系崩塌可又没有新的来支撑，导致那段时间挺痛苦的，大概是看不到前进的动力，可还是一天天过来了。意识到自己是芸芸众生的一个，应该过好每一天，更应该感恩。一切不过是自己主观臆想的对于未来和社会的恐惧，事实是自己遇到并结识的大部分人都很好，给予自己帮助陪伴自己成长。&lt;/p&gt;
&lt;p&gt;后面想想这本书本就是解读经典，自然会带有作者个人的主观看法。作者的价值体系对于自身是合适的，但对于其他不同的个体就要另题别论了。&lt;/p&gt;
&lt;p&gt;渐渐觉得一本书对于一个人的价值要看读这本书时自身的认知与价值体系。不同年龄段读同一本书自然有不同的体会。比如有些经典对于自己是晦涩难懂的，可是有些不算经典、直白只适合看一遍的书可能会让我知道更多，打开自己的视野，怪也只怪自己认知的浅薄和思考的肤浅。大概这也算学习的一种方式吧，广泛的涉猎接触别人的文字见解，但要有自己的思考自己的思想，尽信书不如无书。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经济再发达，也不过是资产阶级的声色犬马；政治再民主，也不过是资产阶级的金钱游戏；市场再自由，也不过是资产阶级剥削劳动者的自由。只要资本主义存在一天，马克思所记录下的故事就会不断重演，无论何时何地何种制度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;一篇读罢头飞雪重读马克思&#34;&gt;《一篇读罢头飞雪，重读马克思》&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;马克思在创作初中毕业论文《青年在选择职业时的考虑》时就清楚地懂得一个人怎样选择职业，又是怎样为人类服务。他指出：“那些为共同目标劳动因而使自己变得更加高尚的人，历史承认他们是伟大人物；那些为大多数人带来幸福的人，经验赞扬他们为最幸福的人。”这就是我们所看到的什么是“伟大人物”，什么是“最幸福的人”。他还指出：“如果我们选择了最能为人类福利而劳动的职业，那么，重担就不能把我们压倒，因为这是为大家而献身；那时我们所感到的就不是可怜的、有限的、自私的乐趣，我们的幸福将属于千百万人，我们的事业将默默地、但是永恒发挥作用地存在下去，而面对我们的骨灰，高尚的人们将洒下热泪。”这是青年马克思写下的一段话。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;惊叹于马克思青年时候的志向远大，不由想起了周恩来的“为中华之崛起而读书”“愿相会于中华腾飞世界时”，张载的“为天地立心，为生民立命”，这大概就是伟人吧。生活在和平和科技快速发展的当代，更应该珍惜来之不易的幸福。&lt;/p&gt;
&lt;p&gt;语言是用来用的，而不是考试的。 那段时间正好在读北大韩毓海教授的《一篇读罢头飞雪，重读马克思》这本书，刚开始读没这个看法，只是惊叹于这位北大教授的文采，书中引用了诗词等包括中国传统文化的东西，所以读起来文字会有落在自己心里的感觉。在这之后看一本外国翻译过来的书（忘记哪本书了，或许是那本书本来就不太好的原因），越来越发现书还是应该读原版而不是翻译的书（不过也有例外，有些书经过译者的翻译加工也值得阅读），明显感觉到书中是有知识，但缺少了正中内心的感觉。因为语言本身的差异以及译者自身的认知偏差，可能会造成翻译的偏差。突然就很羡慕掌握很多语言的人，这样就可以读不同国家的原版书籍。希望自己再努力一下，尽量习惯用英文去看英文书籍，这样就更能吸收到书籍的知识和体会到文字语言的美好了。&lt;/p&gt;
&lt;p&gt;书中最后两篇北大教授和清华院长的“&lt;code&gt;跋&lt;/code&gt;”也很不错（上网查才知道“跋”是“文体的一种，写在书籍，文章或书画作品的后面”），相比于现在有些书籍前面的“推荐序”，更喜欢这种方式。推荐序有一种我还没读作者的书就有种被人硬塞了对这本书看法的感觉。&lt;/p&gt;
&lt;p&gt;因为自己知识积累的匮乏，读一本书吸收的东西很少，有太多自己不懂的地方，果然是为之前的偷懒弥补。 今年的很多个时刻在做某件事读某本书的时候就感慨自己为什么没有早点开始，但转念一想种一棵树最好的时机是十年前，其次是现在。任何时候意识到都不迟，最重要的是开始行动。&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
