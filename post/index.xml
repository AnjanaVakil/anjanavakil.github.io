<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Anjana</title>
    <link>https://anjanavakil.github.io/post/</link>
    <description>Recent content in Posts on Anjana</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Aug 2022 08:15:48 +0800</lastBuildDate><atom:link href="https://anjanavakil.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java并发-JUC</title>
      <link>https://anjanavakil.github.io/post/juc/</link>
      <pubDate>Mon, 01 Aug 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/juc/</guid>
      <description>Package java.util.concurrent Description Utility classes commonly useful in concurrent programming. This package includes a few small standardized extensible frameworks, as well as some classes that provide useful functionality and are otherwise tedious or difficult to implement. Here are brief descriptions of the main components. See also the java.util.concurrent.locks and java.util.concurrent.atomic packages. Executors Interfaces. Executoris a simple standardized interface for defining custom thread-like subsystems, including thread pools, asynchronous I/O, and lightweight</description>
    </item>
    
    <item>
      <title>SQL</title>
      <link>https://anjanavakil.github.io/post/sql/</link>
      <pubDate>Sat, 30 Jul 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/sql/</guid>
      <description>Difference between count() 参考🔗： What is the Difference Between COUNT(*), COUNT(1), COUNT(column name), and COUNT(DISTINCT column name)? 很不错的文章，果然还是看英文靠谱点。 The COUNT() function belongs to SQL’s aggregate functions. It counts the number of rows that satisfy the criteria defined in the parentheses. It does not return the rows</description>
    </item>
    
    <item>
      <title>The Effective Engineer</title>
      <link>https://anjanavakil.github.io/post/the-effective-engineer/</link>
      <pubDate>Mon, 25 Jul 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the-effective-engineer/</guid>
      <description>豆瓣🔗： The Effective Engineer: How to Leverage Your Efforts in Software Engineering to Make a Disproportionate and Meaningful Impact Talks at Google🔗: The Effective Engineer | Edmond Lau | Talks at Google 大概是3、4月份读的英文版，发现7月份出了翻译版，对我来</description>
    </item>
    
    <item>
      <title>Java源码阅读分析</title>
      <link>https://anjanavakil.github.io/post/java-source-code/</link>
      <pubDate>Fri, 22 Jul 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/java-source-code/</guid>
      <description>Object Cloneable接口： 1 2 public interface Cloneable { } A class implements the Cloneable interface to indicate to the Object.clone() method that it is legal for that method to make a field-for-field copy of instances of that class. Invoking Object&amp;rsquo;s clone method on an instance that does not implement the Cloneable interface results in the exception CloneNotSupportedExceptionbeing thrown. By</description>
    </item>
    
    <item>
      <title>StringUtils: leftPad&#43;rightPad</title>
      <link>https://anjanavakil.github.io/post/stringutils/</link>
      <pubDate>Fri, 15 Jul 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/stringutils/</guid>
      <description>StringUtils的leftpad和righted方法源码分析 依赖： 1 2 3 4 5 6 &amp;lt;!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-lang3&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.12.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; leftPad: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>Spring Batch</title>
      <link>https://anjanavakil.github.io/post/springbatch-notes/</link>
      <pubDate>Mon, 11 Jul 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/springbatch-notes/</guid>
      <description>官网示例： Creating a Batch Service Create a Business Class Person.java: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 package com.example.batchprocessing; public class Person { private String lastName; private String firstName; public Person() { } public Person(String firstName,</description>
    </item>
    
    <item>
      <title>JVM</title>
      <link>https://anjanavakil.github.io/post/jvm/</link>
      <pubDate>Sun, 12 Jun 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/jvm/</guid>
      <description>Java SE 8虚拟机规范：The Java® Virtual Machine Specification-Java SE 8 Edition 类加载子系统 运行时数据区概述及线程 Run-Time Data Areas The Java Virtual Machine defines various run-time data areas that are used during execution of a program. Some of these data areas are created on Java Virtual</description>
    </item>
    
    <item>
      <title>《一本书看透信贷：信贷业务全流程深度剖析》</title>
      <link>https://anjanavakil.github.io/post/credit/</link>
      <pubDate>Fri, 10 Jun 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/credit/</guid>
      <description>豆瓣🔗： 《一本书看透信贷：信贷业务全流程深度剖析》 1.1 信贷基本概念 有些信贷业务银行并不提供资金，只提供信用支持，如票据承兑、保函、信用证等，称</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://anjanavakil.github.io/post/redis/</link>
      <pubDate>Sun, 05 Jun 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/redis/</guid>
      <description>官方文档： Redis documentation Redis Sentinel High availability with Redis Sentinel Redis Sentinel provides high availability for Redis when not using Redis Cluster. Running Sentinel However it is mandatory to use a configuration file when running Sentinel, as this file will be used by the system in order to save the current state that will be reloaded in case of restarts. Sentinel will simply refuse to start</description>
    </item>
    
    <item>
      <title>精彩video</title>
      <link>https://anjanavakil.github.io/post/video/</link>
      <pubDate>Thu, 02 Jun 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/video/</guid>
      <description>网络上看过的精彩讲座/课程/录像/视频等： Jul 15: A Philosophy of Software Design | John Ousterhout | Talks at Google John Ousterhout, Professor of Computer Science at Stanford University, discusses complex techniques on how to become a more confident coder. John is excited to announce that he just published the first edition of a new</description>
    </item>
    
    <item>
      <title>OOM</title>
      <link>https://anjanavakil.github.io/post/oom/</link>
      <pubDate>Fri, 20 May 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/oom/</guid>
      <description>3.2 Understand the OutOfMemoryError Exception 翻译+理解： One common indication of a memory leak is the java.lang.OutOfMemoryError exception. Usually, this error is thrown when there is insufficient space to allocate an object in the Java heap. In this case, The garbage collector cannot make space available to accommodate a new object, and the heap cannot be expanded further. Also, this error may be thrown when there</description>
    </item>
    
    <item>
      <title>DATABASE数据库</title>
      <link>https://anjanavakil.github.io/post/database/</link>
      <pubDate>Wed, 18 May 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/database/</guid>
      <description>Oracle Sequence序列 Oracle / PLSQL: Sequences (Autonumber) Oracle NEXTVAL function tips CREATE SEQUENCE 值得注意的几点： When a sequence number is generated, the sequence is incremented, independent of the transaction committing or rolling back. If two users concurrently increment the same sequence, then the sequence numbers each user acquires may have gaps, because sequence numbers are</description>
    </item>
    
    <item>
      <title>《编写高质量代码：改善Java程序的151个建议》</title>
      <link>https://anjanavakil.github.io/post/java-code-151/</link>
      <pubDate>Sun, 15 May 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/java-code-151/</guid>
      <description>豆瓣🔗： 《编写高质量代码：改善Java程序的151个建议》 第1章 Java开发中通用的方法和准则 11：养成良好习惯，显式声明UID 在序列化和反</description>
    </item>
    
    <item>
      <title>碎片学习笔记</title>
      <link>https://anjanavakil.github.io/post/study/</link>
      <pubDate>Fri, 06 May 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/study/</guid>
      <description>SpringCloud学习 开发阶段，用热部署Devtools，但是一旦上线，应该关掉热部署。 客户消费者端口：80端口(一般用户都是80端口)</description>
    </item>
    
    <item>
      <title>Spring Annotations</title>
      <link>https://anjanavakil.github.io/post/spring-annotations/</link>
      <pubDate>Tue, 03 May 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/spring-annotations/</guid>
      <description>@Autowired 1 2 3 4 5 6 @Target({ElementType.CONSTRUCTOR, ElementType.METHOD, ElementType.PARAMETER, ElementType.FIELD, ElementType.ANNOTATION_TYPE}) @Retention(RetentionPolicy.RUNTIME) @Documented public @interface Autowired { boolean required() default true; } @Autowired has a boolean argument called required with a default value of true. It tunes Spring&amp;rsquo;s behavior when it doesn&amp;rsquo;t find a suitable bean to wire. When true, an exception is thrown, otherwise, nothing is wired. @AliasFor 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>股票基金相关知识</title>
      <link>https://anjanavakil.github.io/post/finance/</link>
      <pubDate>Sun, 01 May 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/finance/</guid>
      <description>指数基金 投资的行业上区分，指数基金可以分为宽基和行业指数基金。 常见宽基指数基金有：上证50、沪深300、中证500、创业板、红利、基本面、央</description>
    </item>
    
    <item>
      <title>2022年3月~4月陌生词汇</title>
      <link>https://anjanavakil.github.io/post/vocabulary-2022-3-4/</link>
      <pubDate>Sat, 30 Apr 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/vocabulary-2022-3-4/</guid>
      <description>真心觉得这样记单词学英语其实效率不高，但其实每天记录下阅读英文网站/书籍时遇到的陌生词汇，也算是种监督，起码像中文一样每天都有接触到英文。 2</description>
    </item>
    
    <item>
      <title>《凤凰架构》架构师的视角</title>
      <link>https://anjanavakil.github.io/post/the-fenix-project2/</link>
      <pubDate>Sat, 02 Apr 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the-fenix-project2/</guid>
      <description>架构师的视角 第2章 访问远程服务 2.1 远程服务调用 2.1.1 进程间通信 调用本地方法： 1 2 3 4 5 6 7 8 // Caller: 调用者，代码里的main() // Callee: 被调用者，代码里的</description>
    </item>
    
    <item>
      <title>《凤凰架构》演进中的架构</title>
      <link>https://anjanavakil.github.io/post/the-fenix-project1/</link>
      <pubDate>Fri, 01 Apr 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the-fenix-project1/</guid>
      <description>豆瓣🔗：《凤凰架构：构建可靠的大型分布式系统》 演进中的架构 第1章 服务架构演进史 架构并不是被发明出来的，而是持续演进的结果。 1.1 原始分布式时代 调</description>
    </item>
    
    <item>
      <title>基于Netty的单体聊天IM系统的设计与实现</title>
      <link>https://anjanavakil.github.io/post/im/</link>
      <pubDate>Thu, 31 Mar 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/im/</guid>
      <description>自定义Protobuf编解码器 Netty内置了一组Protobuf编解码器——ProtobufDecoder解码器和ProtobufEnco</description>
    </item>
    
  </channel>
</rss>
