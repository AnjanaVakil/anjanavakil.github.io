<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS BOOK📓 on Anjana</title>
    <link>https://anjanavakil.github.io/tags/cs-book/</link>
    <description>Recent content in CS BOOK📓 on Anjana</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Oct 2022 08:15:48 +0800</lastBuildDate><atom:link href="https://anjanavakil.github.io/tags/cs-book/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux Kernel Development</title>
      <link>https://anjanavakil.github.io/post/linux-kernel-development/</link>
      <pubDate>Wed, 05 Oct 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/linux-kernel-development/</guid>
      <description>豆瓣🔗: 英文版： Linux Kernel Development 中文版： 《Linux内核设计与实现》 1 Introduction to the Linux Kernel 2 Getting Started with the Kernel 1 2 3 4 5 # git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git Cloning into &amp;#39;linux-2.6&amp;#39;... remote: Enumerating objects: 4084, done. ... # cd linux-2.6 This command creates a configuration based on the</description>
    </item>
    
    <item>
      <title>Joel on Software</title>
      <link>https://anjanavakil.github.io/post/joel-on-software/</link>
      <pubDate>Tue, 04 Oct 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/joel-on-software/</guid>
      <description>豆瓣🔗: 英文版： Joel on Software More Joel on Software 中文版： 《软件随想录 卷1》 《软件随想录 卷2》 作者BLOG： Joel Spolsky: https://www.joelonsoftware.com/ 电子书看多了真的需要换纸质书籍读读。这本书是阮</description>
    </item>
    
    <item>
      <title>Hackers and Painters: Big Ideas from the Computer Age</title>
      <link>https://anjanavakil.github.io/post/hackers-and-painters/</link>
      <pubDate>Sat, 01 Oct 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/hackers-and-painters/</guid>
      <description>豆瓣🔗: 英文版： Hackers &amp;amp; Painters: Big Ideas from the Computer Age 中文版： 《黑客与画家》 作者BLOG： Paul Graham: http://www.paulgraham.com/ 《黑客与画家》零零散散加起来应该算是看过两遍了。第一遍（大一or</description>
    </item>
    
    <item>
      <title>Effective C&#43;&#43;</title>
      <link>https://anjanavakil.github.io/post/effective-c&#43;&#43;/</link>
      <pubDate>Fri, 30 Sep 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/effective-c&#43;&#43;/</guid>
      <description>豆瓣🔗: 英文版：Effective C++: 55 Specific Ways to Improve Your Programs and Designs 中文版：Effective C++: 改善程序与设计的55个具体做法 Effective C++ Scott Meyers 55 Specific Ways to Improve Your Programs and Designs C++</description>
    </item>
    
    <item>
      <title>Software Engineering: A Practitioner&#39;s Approach</title>
      <link>https://anjanavakil.github.io/post/software-engineering/</link>
      <pubDate>Sun, 11 Sep 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/software-engineering/</guid>
      <description>研一&amp;quot;软件工程与软件过程&amp;quot;课程书籍——SEPA(Software Engineering: A Practitioner&amp;rsquo;s Approach)笔记。 PREFACE CHAPTER 1: Software And Software Engineering KEY CONCEPTS: application domains characteristics of</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://anjanavakil.github.io/post/k8s/</link>
      <pubDate>Sat, 20 Aug 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/k8s/</guid>
      <description>豆瓣🔗： Kubernetes网络权威指南：基础、原理与实践 9.30更新：这本书应该不会再看下去了。豆瓣评价不多且差评蛮多，有几个好评才决定看</description>
    </item>
    
    <item>
      <title>《凤凰架构》架构师的视角</title>
      <link>https://anjanavakil.github.io/post/the-fenix-project2/</link>
      <pubDate>Sat, 02 Apr 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the-fenix-project2/</guid>
      <description>架构师的视角 第2章 访问远程服务 2.1 远程服务调用 2.1.1 进程间通信 调用本地方法： 1 2 3 4 5 6 7 8 // Caller: 调用者，代码里的main() // Callee: 被调用者，代码里的</description>
    </item>
    
    <item>
      <title>《凤凰架构》演进中的架构</title>
      <link>https://anjanavakil.github.io/post/the-fenix-project1/</link>
      <pubDate>Fri, 01 Apr 2022 08:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the-fenix-project1/</guid>
      <description>豆瓣🔗：《凤凰架构：构建可靠的大型分布式系统》 演进中的架构 第1章 服务架构演进史 架构并不是被发明出来的，而是持续演进的结果。 1.1 原始分布式时代 调</description>
    </item>
    
    <item>
      <title>Coders At Work: Brad Fitzpatrick</title>
      <link>https://anjanavakil.github.io/post/coders-at-work-brad-fitzpatrick/</link>
      <pubDate>Sun, 20 Mar 2022 15:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/coders-at-work-brad-fitzpatrick/</guid>
      <description>Brad Fitzpatrick 书中唯一的80后，LiveJournal和memcached开发者。现效力于Google。 1、学习东西 Seibel: It does seem that while you were writing all this stuff because you needed it, you</description>
    </item>
    
    <item>
      <title>Coders At Work: Jamie Zawinski</title>
      <link>https://anjanavakil.github.io/post/coders-at-work-jamie-zawinski/</link>
      <pubDate>Sun, 20 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/coders-at-work-jamie-zawinski/</guid>
      <description>豆瓣🔗: Coders At Work 《编程人生：15位软件先驱访谈录》 第一次读这本书读的是英文版，说实话当时读的云里雾里的😶‍🌫️，读了一章就丢下了，没有太大收获</description>
    </item>
    
    <item>
      <title>Designing Data-Intensive Applications Notes</title>
      <link>https://anjanavakil.github.io/post/designing-data-intensive_applications/</link>
      <pubDate>Thu, 17 Mar 2022 22:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/designing-data-intensive_applications/</guid>
      <description>豆瓣🔗： atomic In the context of concurrent operations: describing an operation that appears to take effect at a single point in time, so another concurrent process can never encounter the operation in a “half-finished” state. See also isolation. In the context of transactions: grouping together a set of writes that must either all</description>
    </item>
    
    <item>
      <title>《编写可读代码的艺术》</title>
      <link>https://anjanavakil.github.io/post/the-art-of-readable-code/</link>
      <pubDate>Fri, 04 Mar 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/the-art-of-readable-code/</guid>
      <description>豆瓣🔗：《编写可读代码的艺术》 关于编码规范和编写高质量代码类的书籍，印象中第一本看完的应该是《阿里巴巴Java开发手册》，《编写可读代码的艺</description>
    </item>
    
    <item>
      <title>Code: The Hidden Language of Computer Hardware and Software</title>
      <link>https://anjanavakil.github.io/post/code/</link>
      <pubDate>Fri, 25 Feb 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/code/</guid>
      <description>豆瓣🔗：Code: The Hidden Language of Computer Hardware and Software 第一遍读的是中文版，寒假期间重读了英文版。这应该是第一本读完的英文专业书籍。读的过程中还是稍微有些困难的，</description>
    </item>
    
    <item>
      <title>CS基础知识书籍推荐(已读)</title>
      <link>https://anjanavakil.github.io/post/cs-book-recommendation/</link>
      <pubDate>Sat, 15 Jan 2022 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/cs-book-recommendation/</guid>
      <description>豆瓣🔗： 《编码：隐匿在计算机软硬件背后的语言》 Code: The Hidden Language of Computer Hardware and Software 《计算机是怎样跑起来的》 《程序是怎样跑起来的》 《网络是怎样连接的》 《计算机系</description>
    </item>
    
    <item>
      <title>《Wireshark网络分析XXX》</title>
      <link>https://anjanavakil.github.io/post/wireshark-network-analyse/</link>
      <pubDate>Thu, 30 Dec 2021 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/wireshark-network-analyse/</guid>
      <description>豆瓣🔗： 《Wireshark网络分析就这么简单》 《Wireshark网络分析的艺术》 林沛满先生关于Wireshark的两本书：《Wiresh</description>
    </item>
    
    <item>
      <title>Operating Systems: Three Easy Pieces(OSTEP)</title>
      <link>https://anjanavakil.github.io/post/ostep/</link>
      <pubDate>Tue, 28 Dec 2021 14:15:48 +0800</pubDate>
      
      <guid>https://anjanavakil.github.io/post/ostep/</guid>
      <description>豆瓣🔗：《操作系统导论》 Operating Systems: Three Easy Pieces 十分推荐的一本好书，10月3号开始阅读，大概花了13h看完，做了大约200多条笔记（后面学习到读书过程中不</description>
    </item>
    
  </channel>
</rss>
